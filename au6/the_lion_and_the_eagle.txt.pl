root(0,ROOT,stayed).
det(0,eagle,an).
nsubj(0,stayed,eagle).
nsubj(0,entreated,eagle).
nmod:poss(0,flight,his).
dobj(0,stayed,flight).
cc(0,stayed,and).
conj:and(0,stayed,entreated).
det(0,lion,a).
dobj(0,entreated,lion).
mark(0,make,to).
advcl:to(0,entreated,make).
det(0,alliance,an).
dobj(0,make,alliance).
case(0,him,with).
nmod:with(0,alliance,him).
case(0,advantage,to).
nmod:poss(0,advantage,their).
amod(0,advantage,mutual).
nmod:to(0,make,advantage).
entreated(0,eagle,lion).
is_with(0,alliance,him).
stayed(0,eagle,his_flight).
root(1,ROOT,replied).
det(1,lion,the).
nsubj(1,replied,lion).
root(2,ROOT,have).
nsubj(2,have,i).
neg(2,objection,no).
dobj(2,have,objection).
cc(2,excuse,but).
nsubj(2,excuse,you).
aux(2,excuse,must).
dep(2,have,excuse).
dobj(2,excuse,me).
mark(2,requiring,for).
advcl:for(2,excuse,requiring).
dobj(2,requiring,you).
nsubj:xsubj(2,find,you).
mark(2,find,to).
xcomp(2,requiring,find).
dobj(2,find,surety).
case(2,faith,for).
nmod:poss(2,faith,your).
amod(2,faith,good).
nmod:for(2,surety,faith).
mark(2,can,for).
advmod(2,can,how).
advcl:for(2,find,can).
dobj(2,can,i).
compound(2,anyone,trust).
xcomp(2,can,anyone).
case(2,friend,as).
det(2,friend,a).
nmod:as(2,anyone,friend).
nsubj(2,able,friend).
nsubj:xsubj(2,fly,friend).
ref(2,friend,who).
cop(2,able,is).
acl:relcl(2,friend,able).
mark(2,fly,to).
xcomp(2,able,fly).
advmod(2,fly,away).
case(2,bargain,from).
nmod:poss(2,bargain,his).
nmod:from(2,fly,bargain).
advmod(2,pleases,whenever).
nsubj(2,pleases,he).
advcl(2,fly,pleases).
must_excuse(2,you,me).
requiring(2,you,you).
find(2,you,surety_for_your_faith).
find(2,you,surety_for_your_good_faith).
find(2,you,surety).
