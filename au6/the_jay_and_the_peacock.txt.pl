root(0,ROOT,jay).
det(0,jay,a).
acl(0,jay,venturing).
case(0,yard,into).
det(0,yard,a).
nmod:into(0,venturing,yard).
advmod(0,found,where).
nsubj(0,found,peacocks).
acl(0,peacocks,used).
mark(0,walk,to).
xcomp(0,used,walk).
advcl(0,venturing,found).
expl(0,number,there).
det(0,number,a).
xcomp(0,found,number).
case(0,feathers,of).
nmod:of(0,jay,feathers).
nsubj(0,fallen,feathers).
ref(0,feathers,which).
aux(0,fallen,had).
acl:relcl(0,feathers,fallen).
case(0,peacocks,from).
det(0,peacocks,the).
nmod:from(0,fallen,peacocks).
advmod(0,moulting,when).
nsubj(0,moulting,they).
aux(0,moulting,were).
advcl(0,fallen,moulting).
venturing_into(0,jay,yard).
found(0,peacocks,number).
root(1,ROOT,tied).
nsubj(1,tied,he).
nsubj(1,strutted,he).
dobj(1,tied,them).
advmod(1,tail,all).
case(1,tail,to).
nmod:poss(1,tail,his).
nmod:to(1,tied,tail).
cc(1,tied,and).
conj:and(1,tied,strutted).
compound:prt(1,strutted,down).
case(1,peacocks,towards).
det(1,peacocks,the).
nmod:towards(1,strutted,peacocks).
strutted_down_towards(1,he,peacocks).
root(2,ROOT,came).
advmod(2,came,when).
nsubj(2,came,he).
case(2,them,near).
nmod:near(2,came,them).
nsubj(2,discovered,they).
nsubj(2,plucked,they).
advmod(2,discovered,soon).
dep(2,came,discovered).
dobj(2,discovered,the).
dep(2,the,cheat).
cc(2,cheat,and).
csubj(2,pecked,striding).
compound:prt(2,striding,up).
case(2,him,to).
nmod:to(2,striding,him).
dep(2,the,pecked).
conj:and(2,cheat,pecked).
case(2,him,at).
nmod:at(2,pecked,him).
cc(2,discovered,and).
dep(2,came,plucked).
conj:and(2,discovered,plucked).
compound:prt(2,plucked,away).
nmod:poss(2,plumes,his).
amod(2,plumes,borrowed).
dobj(2,plucked,plumes).
plucked_away(2,they,his_borrowed_plumes).
came_near(2,he,them).
plucked_away(2,they,his_plumes).
root(3,ROOT,do).
mark(3,do,so).
det(3,jay,the).
nsubj(3,do,jay).
aux(3,do,could).
neg(3,better,no).
xcomp(3,do,better).
dep(3,do,than).
dep(3,do,go).
advmod(3,go,back).
case(3,jays,to).
det(3,jays,the).
amod(3,jays,other).
nmod:to(3,go,jays).
nsubj(3,watched,jays).
ref(3,jays,who).
aux(3,watched,had).
acl:relcl(3,jays,watched).
nmod:poss(3,behaviour,his).
dobj(3,do,behaviour).
case(3,distance,from).
det(3,distance,a).
nmod:from(3,do,distance).
could_do(3,jay,his_behaviour).
