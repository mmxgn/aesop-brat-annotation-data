root(0,ROOT,trod).
det(0,drinking,an).
compound(0,drinking,ox).
nsubj(0,trod,drinking).
case(0,pool,at).
det(0,pool,a).
nmod:at(0,drinking,pool).
case(0,brood,on).
det(0,brood,a).
nmod:on(0,trod,brood).
case(0,frogs,of).
amod(0,frogs,young).
nmod:of(0,brood,frogs).
cc(0,brood,and).
amod(0,one,crushed).
det:qmod(0,them,one).
mwe(0,one,of).
nmod:on(0,trod,them).
conj:and(0,brood,them).
case(0,death,to).
nmod:to(0,trod,death).
trod_on(0,ox_drinking,brood_of_frogs).
trod_to(0,ox_drinking,death).
trod_on(0,ox_drinking,brood).
trod_on(0,ox_drinking,brood_of_young_frogs).
root(1,ROOT,inquired).
det(1,mother,the).
nsubj(1,inquired,mother).
dep(1,mother,coming).
advmod(1,coming,up).
cc(1,coming,and).
dep(1,mother,missing).
conj:and(1,coming,missing).
dobj(1,missing,one).
case(1,sons,of).
nmod:poss(1,sons,her).
nmod:of(1,one,sons).
case(1,brothers,of).
nmod:poss(1,brothers,his).
nmod:of(1,inquired,brothers).
nsubj(1,become,brothers).
ref(1,brothers,what).
aux(1,become,had).
acl:relcl(1,brothers,become).
case(1,him,of).
nmod:of(1,become,him).
root(2,ROOT,mother).
nsubj(2,mother,he).
cop(2,mother,is).
amod(2,mother,dead).
amod(2,mother,dear).
is(2,he,dead_mother).
is(2,he,dead_dear_mother).
is(2,he,mother).
is(2,he,dear_mother).
root(3,ROOT,came).
mark(3,came,for).
advmod(3,now,just).
advmod(3,came,now).
det(3,beast,a).
advmod(3,huge,very).
amod(3,beast,huge).
nsubj(3,came,beast).
nsubj(3,crushed,beast).
case(3,feet,with).
nummod(3,feet,four).
amod(3,feet,great).
nmod:with(3,beast,feet).
case(3,pool,to).
det(3,pool,the).
nmod:to(3,came,pool).
cc(3,came,and).
conj:and(3,came,crushed).
dobj(3,crushed,him).
case(3,death,to).
nmod:to(3,crushed,death).
case(3,heel,with).
nmod:poss(3,heel,his).
amod(3,heel,cloven).
nmod:with(3,crushed,heel).
is_with(3,huge_beast,four_great_feet).
root(4,ROOT,frog).
det(4,frog,the).
dep(4,frog,puffing).
dobj(4,puffing,herself).
compound:prt(4,puffing,out).
dep(4,puffing,inquired).
root(5,ROOT,big).
mark(5,big,if).
det(5,beast,the).
nsubj(5,big,beast).
cop(5,big,was).
advmod(5,big,as).
case(5,that,as).
nmod:as(5,big,that).
case(5,size,in).
nmod:in(5,that,size).
was(5,beast,big).
was_big_as(5,beast,that_in_size).
was_as_big_as(5,beast,that_in_size).
was_big_as(5,beast,that).
was(5,beast,as_big).
was_as_big_as(5,beast,that).
root(6,ROOT,cease).
dobj(6,cease,mother).
mark(6,puff,to).
advcl:to(6,cease,puff).
dobj(6,puff,yourself).
advmod(6,puff,out).
root(7,ROOT,said).
nmod:poss(7,son,her).
nsubj(7,said,son).
root(8,ROOT,angry).
cc(8,angry,and).
aux(8,angry,do).
neg(8,angry,not).
cop(8,angry,be).
root(9,ROOT,assure).
case(9,you,for).
nmod:for(9,assure,you).
aux(9,assure,would).
nsubj(9,assure,i).
iobj(9,assure,you).
advmod(9,burst,sooner).
dobj(9,assure,burst).
mark(9,imitate,than).
advmod(9,imitate,successfully).
dep(9,burst,imitate).
det(9,hugeness,the).
dobj(9,imitate,hugeness).
case(9,monster,of).
det(9,monster,that).
nmod:of(9,hugeness,monster).
would_assure(9,i,sooner_burst).
would_assure(9,i,you).
would_assure(9,i,burst).
would_assure_burst_for(9,i,you).
