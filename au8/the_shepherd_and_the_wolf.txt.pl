root(0,ROOT,found).
det(0,shepherd,a).
nsubj(0,found,shepherd).
nsubj(0,brought,shepherd).
nsubj(0,taught,shepherd).
advmod(0,found,once).
det(0,whelp,the).
dobj(0,found,whelp).
case(0,wolf,of).
det(0,wolf,a).
nmod:of(0,whelp,wolf).
cc(0,found,and).
conj:and(0,found,brought).
dobj(0,brought,it).
compound:prt(0,brought,up).
cc(0,found,and).
case(0,while,after).
det(0,while,a).
nmod:after(0,taught,while).
conj:and(0,found,taught).
dobj(0,taught,it).
mark(0,steal,to).
advcl:to(0,taught,steal).
dobj(0,steal,lambs).
case(0,flocks,from).
det(0,flocks,the).
amod(0,flocks,neighboring).
nmod:from(0,steal,flocks).
found(0,shepherd,whelp).
once_found(0,shepherd,whelp).
taught(0,shepherd,it).
once_found(0,shepherd,whelp_of_wolf).
found(0,shepherd,whelp_of_wolf).
brought_up(0,shepherd,it).
root(1,ROOT,said).
det(1,wolf,the).
nsubj(1,said,wolf).
aux(1,shown,having).
dep(1,wolf,shown).
nsubj(1,pupil,himself).
det(1,pupil,an).
amod(1,pupil,apt).
xcomp(1,shown,pupil).
case(1,shepherd,to).
det(1,shepherd,the).
nmod:to(1,said,shepherd).
said_to(1,wolf,shepherd).
root(2,ROOT,taught).
mark(2,taught,since).
nsubj(2,taught,you).
aux(2,taught,have).
dobj(2,taught,me).
nsubj:xsubj(2,steal,me).
mark(2,steal,to).
xcomp(2,taught,steal).
nsubj(2,keep,you).
aux(2,keep,must).
xcomp(2,steal,keep).
det(2,lookout,a).
amod(2,lookout,sharp).
dobj(2,keep,lookout).
cc(2,keep,or).
nsubj(2,lose,you).
aux(2,lose,will).
xcomp(2,steal,lose).
conj:or(2,keep,lose).
dobj(2,lose,some).
case(2,flock,of).
nmod:poss(2,flock,your).
amod(2,flock,own).
nmod:of(2,some,flock).
keep(2,you,sharp_lookout).
will_lose(2,you,some_of_your_flock).
will_lose(2,you,some_of_your_own_flock).
will_lose(2,you,some_your_own_flock).
keep(2,you,lookout).
have_taught(2,you,me).
will_lose(2,you,some).
will_lose(2,you,some_your_flock).
