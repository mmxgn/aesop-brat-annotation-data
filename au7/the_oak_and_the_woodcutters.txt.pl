root(0,ROOT,cut).
det(0,woodcutter,the).
nsubj(0,cut,woodcutter).
nsubj(0,split,woodcutter).
compound:prt(0,cut,down).
det(0,oak,a).
compound(0,oak,mountain).
dobj(0,cut,oak).
cc(0,cut,and).
conj:and(0,cut,split).
dobj(0,split,it).
case(0,pieces,in).
nmod:in(0,split,pieces).
acl(0,pieces,making).
dobj(0,making,wedges).
case(0,branches,of).
nmod:poss(0,branches,its).
amod(0,branches,own).
nmod:of(0,wedges,branches).
mark(0,dividing,for).
advcl:for(0,making,dividing).
det(0,trunk,the).
dobj(0,dividing,trunk).
making(0,pieces,wedges_of_its_own_branches).
cut_down(0,woodcutter,mountain_oak).
making(0,pieces,wedges).
split(0,woodcutter,it).
making(0,pieces,wedges_of_its_branches).
root(1,ROOT,said).
det(1,oak,the).
nsubj(1,said,oak).
case(1,sigh,with).
det(1,sigh,a).
nmod:with(1,said,sigh).
said_with(1,oak,sigh).
root(2,ROOT,care).
nsubj(2,care,i).
aux(2,care,do).
neg(2,care,not).
case(2,blows,about).
det(2,blows,the).
nmod:about(2,care,blows).
case(2,axe,of).
det(2,axe,the).
nmod:of(2,blows,axe).
acl(2,axe,aimed).
case(2,roots,at).
nmod:poss(2,roots,my).
nmod:at(2,aimed,roots).
cc(2,grieve,but).
nsubj(2,grieve,i).
aux(2,grieve,do).
ccomp(2,aimed,grieve).
mark(2,torn,at).
auxpass(2,torn,being).
advcl:at(2,grieve,torn).
case(2,pieces,in).
nmod:in(2,torn,pieces).
case(2,wedges,by).
det(2,wedges,these).
nmod:agent(2,torn,wedges).
acl(2,wedges,made).
case(2,branches,from).
nmod:poss(2,branches,my).
amod(2,branches,own).
nmod:from(2,made,branches).
