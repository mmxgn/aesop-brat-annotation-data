root(0,ROOT,mole).
det(0,mole,a).
det(0,creature,a).
nsubj(0,said,creature).
amod(0,creature,blind).
case(0,birth,from).
nmod:from(0,blind,birth).
advmod(0,said,once).
ccomp(0,mole,said).
case(0,mother,to).
nmod:poss(0,mother,his).
nmod:to(0,said,mother).
said_to(0,creature,his_mother).
said_to(0,creature_blind,his_mother).
once_said_to(0,creature_blind,his_mother).
blind_from(0,creature,birth).
once_said_to(0,creature,his_mother).
root(1,ROOT,sure).
nsubj(1,sure,i).
cop(1,sure,am).
mark(1,see,than).
nsubj(1,see,i).
aux(1,see,can).
ccomp(1,sure,see).
dobj(1,see,mother).
see(1,i,mother).
am(1,i,sure).
root(2,ROOT,desire).
case(2,desire,in).
det(2,desire,the).
mark(2,prove,to).
acl:to(2,desire,prove).
case(2,him,to).
nmod:to(2,prove,him).
nmod:poss(2,mistake,his).
dobj(2,prove,mistake).
nmod:poss(2,mother,his).
nsubj(2,placed,mother).
nsubj(2,asked,mother).
acl:relcl(2,mistake,placed).
case(2,him,before).
nmod:before(2,placed,him).
det(2,grains,a).
amod(2,grains,few).
dobj(2,placed,grains).
case(2,frankincense,of).
nmod:of(2,grains,frankincense).
cc(2,placed,and).
acl:relcl(2,mistake,asked).
conj:and(2,placed,asked).
few_grains_of(2,his_mother,frankincense).
grains_of(2,his_mother,frankincense).
placed_grains_before(2,his_mother,him).
placed(2,his_mother,few_grains_of_frankincense).
placed(2,his_mother,few_grains).
placed(2,his_mother,grains_of_frankincense).
placed(2,his_mother,grains).
root(3,ROOT,what).
cop(3,what,is).
nsubj(3,what,it).
root(4,ROOT,said).
punct(4,said,').
det(4,mole,the).
amod(4,mole,young).
dep(4,said,mole).
root(5,ROOT,pebble).
nsubj(5,pebble,it).
cop(5,pebble,is).
det(5,pebble,a).
is(5,it,pebble).
root(6,ROOT,exclaimed).
nmod:poss(6,mother,his).
nsubj(6,exclaimed,mother).
root(7,ROOT,son).
nmod:poss(7,son,my).
mark(7,blind,son).
nsubj(7,afraid,i).
cop(7,afraid,am).
acl:relcl(7,son,afraid).
ref(7,son,that).
nsubj(7,blind,you).
cop(7,blind,are).
neg(7,blind,not).
advmod(7,blind,only).
ccomp(7,afraid,blind).
cc(7,blind,but).
mark(7,lost,that).
nsubj(7,lost,you).
aux(7,lost,have).
ccomp(7,afraid,lost).
conj:but(7,blind,lost).
nmod:poss(7,sense,your).
dobj(7,lost,sense).
case(7,smell,of).
nmod:of(7,sense,smell).
have_lost(7,you,your_sense).
have_lost(7,you,your_sense_of_smell).
