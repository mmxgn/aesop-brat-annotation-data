root(0,ROOT,saw).
det(0,monkey,a).
nsubj(0,saw,monkey).
nsubj(0,watched,monkey).
acl(0,monkey,perched).
case(0,tree,upon).
det(0,tree,a).
amod(0,tree,lofty).
nmod:upon(0,perched,tree).
det(0,fishermen,some).
dobj(0,saw,fishermen).
xcomp(0,saw,casting).
nmod:poss(0,nets,their).
dobj(0,casting,nets).
case(0,river,into).
det(0,river,a).
nmod:into(0,casting,river).
cc(0,saw,and).
advmod(0,watched,narrowly).
conj:and(0,saw,watched).
nmod:poss(0,proceedings,their).
dobj(0,watched,proceedings).
perched_upon(0,monkey,lofty_tree).
saw(0,monkey,fishermen).
casting(0,fishermen,their_nets).
perched_upon(0,monkey,tree).
narrowly_watched(0,monkey,their_proceedings).
watched(0,monkey,their_proceedings).
root(1,ROOT,left).
det(1,fishermen,the).
nsubj(1,left,fishermen).
case(1,while,after).
det(1,while,a).
nmod:after(1,fishermen,while).
acl(1,while,gave).
compound:prt(1,gave,up).
dobj(1,gave,fishing).
cc(1,while,and).
mark(1,going,on).
nmod:after(1,fishermen,going).
conj:and(1,while,going).
dobj(1,going,home).
case(1,dinner,to).
nmod:to(1,going,dinner).
nmod:poss(1,nets,their).
dobj(1,left,nets).
case(1,bank,upon).
det(1,bank,the).
nmod:upon(1,left,bank).
left(1,fishermen,their_nets).
root(2,ROOT,descended).
det(2,monkey,the).
nsubj(2,imitative,monkey).
nsubj(2,descended,monkey).
nsubj(2,endeavored,monkey).
nsubj:xsubj(2,do,monkey).
ref(2,monkey,who).
cop(2,imitative,is).
det(2,imitative,the).
advmod(2,imitative,most).
acl:relcl(2,monkey,imitative).
case(2,animals,of).
nmod:of(2,imitative,animals).
case(2,treetop,from).
det(2,treetop,the).
nmod:from(2,descended,treetop).
cc(2,descended,and).
conj:and(2,descended,endeavored).
mark(2,do,to).
xcomp(2,endeavored,do).
mark(2,done,as).
nsubj(2,done,they).
aux(2,done,had).
advcl:as(2,do,done).
root(3,ROOT,handled).
aux(3,handled,having).
det(3,net,the).
dobj(3,handled,net).
nsubj(3,threw,he).
nsubj(3,became,he).
nsubj(3,drowned,he).
acl:relcl(3,net,threw).
dobj(3,threw,it).
case(3,river,into).
det(3,river,the).
nmod:into(3,threw,river).
cc(3,threw,but).
acl:relcl(3,net,became).
conj:but(3,threw,became).
xcomp(3,became,tangled).
case(3,meshes,in).
det(3,meshes,the).
nmod:in(3,became,meshes).
cc(3,threw,and).
acl:relcl(3,net,drowned).
conj:but(3,threw,drowned).
became(3,he,tangled).
threw(3,he,it).
became_in(3,he,meshes).
root(4,ROOT,said).
case(4,breath,with).
nmod:poss(4,breath,his).
amod(4,breath,last).
nmod:with(4,said,breath).
nsubj(4,said,he).
case(4,himself,to).
nmod:to(4,said,himself).
said_with(4,he,his_last_breath).
said_to(4,he,himself).
said_with(4,he,his_breath).
root(5,ROOT,served).
nsubjpass(5,served,i).
auxpass(5,served,am).
advmod(5,served,rightly).
am(5,i,served).
am(5,i,rightly_served).
root(6,ROOT,had).
case(6,what,for).
nmod:for(6,had,what).
nsubj(6,had,business).
dobj(6,had,i).
nsubj(6,handled,i).
ref(6,i,who).
aux(6,handled,had).
neg(6,handled,never).
acl:relcl(6,i,handled).
det(6,net,a).
dobj(6,handled,net).
mark(6,try,to).
acl:to(6,net,try).
cc(6,try,and).
acl:to(6,net,catch).
conj:and(6,try,catch).
dobj(6,try,fish).
