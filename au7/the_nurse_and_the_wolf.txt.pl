root(0,ROOT,quiet).
cop(0,quiet,be).
advmod(0,quiet,now).
root(1,ROOT,said).
det(1,nurse,an).
amod(1,nurse,old).
nsubj(1,said,nurse).
case(1,child,to).
det(1,child,a).
nmod:to(1,nurse,child).
acl(1,child,sitting).
case(1,lap,on).
nmod:poss(1,lap,her).
nmod:on(1,sitting,lap).
root(2,ROOT,make).
mark(2,make,if).
nsubj(2,make,you).
mark(2,throw,that).
nsubj(2,throw,noise).
advmod(2,throw,again).
nsubj(2,throw,i).
aux(2,throw,will).
ccomp(2,make,throw).
dobj(2,throw,you).
case(2,wolf,to).
det(2,wolf,the).
nmod:to(2,throw,wolf).
again_throw(2,noise,you).
again_throw(2,i,you).
throw(2,i,you).
throw(2,noise,you).
root(3,ROOT,chanced).
advmod(3,chanced,now).
nsubj(3,chanced,it).
mark(3,passing,that).
det(3,wolf,a).
nsubj(3,passing,wolf).
aux(3,passing,was).
ccomp(3,chanced,passing).
advmod(3,passing,close).
case(3,window,under).
det(3,window,the).
nmod:under(3,close,window).
mark(3,said,as).
nsubjpass(3,said,this).
auxpass(3,said,was).
advcl:as(3,passing,said).
passing(3,wolf,said).
passing_close(3,wolf,said).
root(4,ROOT,so).
nsubj(4,crouched,he).
nsubj(4,waited,he).
ccomp(4,so,crouched).
compound:prt(4,crouched,down).
case(4,side,by).
det(4,side,the).
nmod:by(4,crouched,side).
case(4,house,of).
det(4,house,the).
nmod:of(4,side,house).
cc(4,crouched,and).
ccomp(4,so,waited).
conj:and(4,crouched,waited).
crouched_down_by(4,he,side).
crouched_down_by(4,he,side_of_house).
root(5,ROOT,am).
advmod(5,am,i).
case(5,to-day,in).
amod(5,to-day,good).
compound(5,to-day,luck).
nmod:in(5,am,to-day).
root(6,ROOT,thought).
dobj(6,thought,he).
root(7,ROOT,sure).
nsubj(7,sure,it).
nsubj:xsubj(7,cry,it).
cop(7,sure,is).
mark(7,cry,to).
xcomp(7,sure,cry).
advmod(7,cry,soon).
cc(7,sure,and).
det(7,morsel,a).
amod(7,morsel,daintier).
conj:and(7,sure,morsel).
nsubj(7,had,i).
aux(7,had,have).
neg(7,had,n't).
acl:relcl(7,morsel,had).
case(7,day,for).
amod(7,day,many).
det(7,day,a).
amod(7,day,long).
nmod:for(7,had,day).
is(7,it,sure).
root(8,ROOT,so).
nsubj(8,waited,he).
ccomp(8,so,waited).
cc(8,waited,and).
nsubj(8,waited,he).
ccomp(8,so,waited).
conj:and(8,waited,waited).
cc(8,waited,and).
nsubj(8,waited,he).
conj:and(8,waited,waited).
conj:and(8,waited,waited).
mark(8,began,till).
case(8,last,at).
nmod:at(8,began,last).
det(8,child,the).
nsubj(8,began,child).
nsubj:xsubj(8,cry,child).
advcl:till(8,waited,began).
mark(8,cry,to).
xcomp(8,began,cry).
cc(8,began,and).
det(8,wolf,the).
nsubj(8,came,wolf).
nsubj(8,looked,wolf).
advcl:till(8,waited,came).
conj:and(8,began,came).
advmod(8,came,forward).
case(8,window,before).
det(8,window,the).
nmod:before(8,came,window).
cc(8,came,and).
conj:and(8,began,looked).
conj:and(8,came,looked).
compound:prt(8,looked,up).
case(8,nurse,to).
det(8,nurse,the).
nmod:to(8,looked,nurse).
xcomp(8,looked,wagging).
nmod:poss(8,tail,his).
dobj(8,wagging,tail).
came_forward_before(8,wolf,window).
waited(8,he,at_last_child_began).
looked_up_to(8,wolf,nurse).
waited(8,he,child_began).
began_at(8,child,last).
came_before(8,wolf,window).
began(8,child,cry).
root(9,ROOT,did).
cc(9,did,but).
det:predet(9,nurse,all).
det(9,nurse,the).
nsubj(9,did,nurse).
ccomp(9,did,was).
mark(9,shut,to).
xcomp(9,was,shut).
compound:prt(9,shut,down).
det(9,window,the).
dobj(9,shut,window).
cc(9,shut,and).
xcomp(9,was,call).
conj:and(9,shut,call).
mark(9,came,for).
nsubj(9,came,help).
cc(9,help,and).
det(9,dogs,the).
conj:and(9,help,dogs).
nsubj(9,came,dogs).
case(9,house,of).
det(9,house,the).
nmod:of(9,dogs,house).
advcl:for(9,call,came).
xcomp(9,came,rushing).
compound:prt(9,rushing,out).
dogs_of(9,help,house).
call(9,window,dogs_of_house_came).
call(9,window,help_came).
call(9,window,dogs_came).
call(9,window,help_dogs_came).
call(9,window,help_dogs_of_house_came).
root(10,ROOT,ah).
