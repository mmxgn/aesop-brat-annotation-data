root(0,ROOT,going).
det(0,man,a).
nsubj(0,going,man).
cc(0,man,and).
nmod:poss(0,son,his).
conj:and(0,man,son).
nsubj(0,going,son).
aux(0,going,were).
advmod(0,going,once).
case(0,donkey,with).
nmod:poss(0,donkey,their).
nmod:with(0,going,donkey).
case(0,market,to).
nmod:to(0,going,market).
were_going_with(0,man,their_donkey).
were_once_going_to(0,his_son,market).
were_going_with(0,his_son,their_donkey).
were_going_to(0,man,market).
were_once_going_with(0,man,their_donkey).
were_going_to(0,his_son,market).
were_once_going_to(0,man,market).
were_once_going_with(0,his_son,their_donkey).
root(1,ROOT,walking).
mark(1,walking,as).
nsubj(1,walking,they).
aux(1,walking,were).
compound:prt(1,walking,along).
case(1,side,by).
nmod:poss(1,side,its).
nmod:by(1,walking,side).
det(1,countryman,a).
dobj(1,walking,countryman).
acl:relcl(1,countryman,passed).
dobj(1,passed,them).
cc(1,passed,and).
acl:relcl(1,countryman,said).
conj:and(1,passed,said).
were_walking_along_by(1,they,its_side).
root(2,ROOT,fools).
dep(2,fools,you).
nsubj(2,donkey,fools).
ref(2,fools,what).
cop(2,donkey,is).
det(2,donkey,a).
acl:relcl(2,fools,donkey).
advcl(2,donkey,for).
cc(2,ride,but).
mark(2,ride,to).
dep(2,for,ride).
nmod(2,ride,upon).
root(3,ROOT,put).
mark(3,put,so).
det(3,man,the).
nsubj(3,put,man).
det(3,boy,the).
dobj(3,put,boy).
case(3,donkey,on).
det(3,donkey,the).
nmod:on(3,put,donkey).
cc(3,put,and).
nsubj(3,went,they).
conj:and(3,put,went).
case(3,way,on).
nmod:poss(3,way,their).
nmod:on(3,went,way).
put(3,man,boy).
put_boy_on(3,man,donkey).
went_on(3,they,their_way).
root(4,ROOT,passed).
cc(4,passed,but).
advmod(4,passed,soon).
nsubj(4,passed,they).
det(4,group,a).
dobj(4,passed,group).
case(4,men,of).
nmod:of(4,group,men).
nmod:of(4,one,men).
nsubj(4,said,one).
case(4,whom,of).
ref(4,men,whom).
acl:relcl(4,men,said).
passed(4,they,group).
soon_passed(4,they,group).
root(5,ROOT,see).
det(5,youngster,that).
amod(5,youngster,lazy).
dobj(5,see,youngster).
nsubj(5,lets,he).
acl:relcl(5,youngster,lets).
nmod:poss(5,walk,his).
compound(5,walk,father).
dobj(5,lets,walk).
case(5,rides,while).
dep(5,rides,he).
nmod:while(5,lets,rides).
lets(5,he,his_father_walk).
root(6,ROOT,ordered).
mark(6,ordered,so).
det(6,man,the).
nsubj(6,ordered,man).
nsubj(6,got,man).
nmod:poss(6,boy,his).
dobj(6,ordered,boy).
nsubj:xsubj(6,get,boy).
mark(6,get,to).
xcomp(6,ordered,get).
compound:prt(6,get,off).
cc(6,ordered,and).
conj:and(6,ordered,got).
case(6,himself,on).
nmod:on(6,got,himself).
got_on(6,man,himself).
ordered(6,man,his_boy).
root(7,ROOT,gone).
cc(7,gone,but).
nsubj(7,gone,they).
aux(7,gone,had).
neg(7,gone,n't).
advmod(7,when,far).
advmod(7,passed,when).
nsubj(7,passed,they).
advcl(7,gone,passed).
nummod(7,women,two).
dobj(7,passed,women).
nmod:of(7,one,women).
nsubj(7,said,one).
case(7,whom,of).
ref(7,women,whom).
acl:relcl(7,women,said).
case(7,other,to).
det(7,other,the).
nmod:to(7,said,other).
root(8,ROOT,shame).
case(8,lout,on).
det(8,lout,that).
amod(8,lout,lazy).
nmod:on(8,shame,lout).
mark(8,let,to).
acl:to(8,lout,let).
nmod:poss(8,trudge,his).
amod(8,trudge,poor).
amod(8,trudge,little).
compound(8,trudge,son).
dobj(8,let,trudge).
advmod(8,let,along).
root(9,ROOT,know).
advmod(9,know,well).
det(9,man,the).
nmod:npmod(9,well,man).
aux(9,know,did).
neg(9,know,n't).
nsubj(9,do,what).
mark(9,do,to).
dep(9,know,do).
cc(9,last,but).
case(9,last,at).
nmod:at(9,do,last).
nsubj(9,took,he).
acl:relcl(9,last,took).
nmod:poss(9,boy,his).
dobj(9,took,boy).
compound:prt(9,took,up).
case(9,him,before).
nmod:before(9,took,him).
case(9,donkey,on).
det(9,donkey,the).
nmod:on(9,took,donkey).
took_up(9,he,his_boy).
root(10,ROOT,time).
case(10,time,by).
det(10,time,this).
nsubj(10,come,they).
aux(10,come,had).
acl:relcl(10,time,come).
case(10,town,to).
det(10,town,the).
nmod:to(10,come,town).
cc(10,come,and).
det(10,passers-by,the).
nsubj(10,began,passers-by).
nsubj:xsubj(10,jeer,passers-by).
nsubj:xsubj(10,point,passers-by).
acl:relcl(10,time,began).
conj:and(10,come,began).
mark(10,jeer,to).
xcomp(10,began,jeer).
cc(10,jeer,and).
xcomp(10,began,point).
conj:and(10,jeer,point).
case(10,them,at).
nmod:at(10,jeer,them).
jeer_at(10,passers-by,them).
had_come_to(10,they,town).
began(10,passers-by,jeer).
began(10,passers-by,jeer_at_them).
root(11,ROOT,stopped).
det(11,man,the).
nsubj(11,stopped,man).
nsubj(11,asked,man).
cc(11,stopped,and).
conj:and(11,stopped,asked).
nmod:at(11,scoffing,what).
nsubj(11,scoffing,they).
aux(11,scoffing,were).
ccomp(11,asked,scoffing).
case(11,what,at).
root(12,ROOT,said).
det(12,men,the).
nsubj(12,said,men).
root(13,ROOT,ashamed).
cop(13,ashamed,are).
neg(13,ashamed,n't).
nmod:npmod(13,ashamed,you).
case(13,yourself,of).
nmod:of(13,ashamed,yourself).
mark(13,overloading,for).
advcl:for(13,ashamed,overloading).
advmod(13,overloading,that).
amod(13,donkey,poor).
nsubj(13,ashamed,donkey).
case(13,you,with).
nmod:with(13,donkey,you).
cc(13,you,and).
nmod:poss(13,son,your).
amod(13,son,hulking).
nmod:with(13,donkey,son).
conj:and(13,you,son).
is_with(13,poor_donkey,you).
root(14,ROOT,got).
det(14,man,the).
nsubj(14,got,man).
nsubj(14,tried,man).
nsubj:xsubj(14,think,man).
cc(14,man,and).
conj:and(14,man,boy).
nsubj(14,got,boy).
advmod(14,got,off).
cc(14,got,and).
conj:and(14,got,tried).
mark(14,think,to).
xcomp(14,tried,think).
nsubj(14,do,what).
mark(14,do,to).
ccomp(14,think,do).
tried(14,boy,think).
root(15,ROOT,thought).
nsubj(15,thought,they).
cc(15,thought,and).
nsubj(15,thought,they).
conj:and(15,thought,thought).
mark(15,cut,till).
case(15,last,at).
nmod:at(15,cut,last).
nsubj(15,cut,they).
advcl:till(15,thought,cut).
compound:prt(15,cut,down).
det(15,pole,a).
nsubj(15,tied,pole).
nsubj(15,raised,pole).
ccomp(15,cut,tied).
det(15,donkey,the).
nmod:poss(15,feet,donkey).
case(15,donkey,'s).
dobj(15,tied,feet).
case(15,it,to).
nmod:to(15,tied,it).
cc(15,tied,and).
ccomp(15,cut,raised).
conj:and(15,tied,raised).
det(15,pole,the).
dobj(15,raised,pole).
cc(15,pole,and).
det(15,donkey,the).
dobj(15,raised,donkey).
conj:and(15,pole,donkey).
case(15,shoulders,to).
nmod:poss(15,shoulders,their).
nmod:to(15,raised,shoulders).
has(15,donkey,feet).
raised(15,pole,donkey).
raised_pole_to(15,pole,their_shoulders).
tied(15,pole,donkey_s_feet).
raised_donkey_to(15,pole,their_shoulders).
cut_down_at(15,they,last).
raised(15,pole,pole).
root(16,ROOT,went).
nsubj(16,went,they).
advmod(16,went,along).
case(16,laughter,amid).
det(16,laughter,the).
nmod:amid(16,went,laughter).
case(16,all,of).
nmod:of(16,laughter,all).
nsubj(16,met,all).
ref(16,all,who).
acl:relcl(16,all,met).
dobj(16,met,them).
mark(16,came,till).
nsubj(16,came,they).
advcl:till(16,met,came).
case(16,bridge,to).
compound(16,bridge,market).
nmod:to(16,came,bridge).
advmod(16,kicked,when).
det(16,donkey,the).
nsubj(16,kicked,donkey).
nsubj(16,caused,donkey).
acl(16,donkey,getting).
dobj(16,getting,one).
case(16,feet,of).
nmod:poss(16,feet,his).
nmod:of(16,one,feet).
advmod(16,kicked,loose).
advcl(16,came,kicked).
compound:prt(16,kicked,out).
cc(16,kicked,and).
advcl(16,came,caused).
conj:and(16,kicked,caused).
det(16,boy,the).
dobj(16,caused,boy).
mark(16,drop,to).
advcl:to(16,caused,drop).
nmod:poss(16,end,his).
dobj(16,drop,end).
case(16,pole,of).
det(16,pole,the).
nmod:of(16,end,pole).
came_to(16,they,market_bridge).
caused(16,donkey,boy).
went_amid(16,they,laughter).
went_along_amid(16,they,laughter).
one_of(16,getting,his_feet).
getting(16,donkey,one_his_feet).
one(16,getting,his_feet).
getting(16,donkey,one_of_his_feet).
root(17,ROOT,fell).
case(17,struggle,in).
det(17,struggle,the).
nmod:in(17,fell,struggle).
det(17,donkey,the).
nsubj(17,fell,donkey).
case(17,bridge,over).
det(17,bridge,the).
nmod:over(17,fell,bridge).
cc(17,bridge,and).
nmod:poss(17,fore-feet,his).
nmod:over(17,fell,fore-feet).
conj:and(17,bridge,fore-feet).
auxpass(17,tied,being).
acl(17,fore-feet,tied).
advmod(17,tied,together).
nsubjpass(17,drowned,he).
auxpass(17,drowned,was).
ccomp(17,tied,drowned).
fell_in(17,donkey,struggle).
fell_over(17,donkey,bridge).
root(18,ROOT,teach).
nsubj(18,teach,that).
aux(18,teach,will).
dobj(18,teach,you).
