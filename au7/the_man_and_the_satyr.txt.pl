root(0,ROOT,lost).
det(0,man,a).
nsubj(0,lost,man).
aux(0,lost,had).
nmod:poss(0,way,his).
dobj(0,lost,way).
case(0,night,in).
det(0,winter,a).
nmod:npmod(0,bitter,wood).
nummod(0,wood,one).
amod(0,winter,bitter).
nmod:poss(0,night,winter).
case(0,winter,'s).
nmod:in(0,lost,night).
in(0,bitter_winter,night).
had_lost(0,man,his_way).
root(1,ROOT,roaming).
mark(1,roaming,as).
nsubj(1,roaming,he).
nsubj(1,finding,he).
aux(1,roaming,was).
case(1,satyr,about).
det(1,satyr,a).
nmod:about(1,roaming,satyr).
acl(1,satyr,came).
compound:prt(1,came,up).
case(1,him,to).
nmod:to(1,came,him).
cc(1,roaming,and).
conj:and(1,roaming,finding).
mark(1,lost,that).
nsubj(1,lost,he).
aux(1,lost,had).
ccomp(1,finding,lost).
nmod:poss(1,way,his).
nsubj(1,promised,way).
nsubj:xsubj(1,give,way).
ccomp(1,lost,promised).
mark(1,give,to).
xcomp(1,promised,give).
iobj(1,give,him).
det(1,lodging,a).
dobj(1,give,lodging).
case(1,night,for).
det(1,night,the).
nmod:for(1,lodging,night).
cc(1,night,and).
nmod:for(1,lodging,guide).
conj:and(1,night,guide).
dobj(1,roaming,him).
case(1,forest,out).
mwe(1,out,of).
det(1,forest,the).
nmod:out_of(1,roaming,forest).
case(1,morning,in).
det(1,morning,the).
nmod:in(1,forest,morning).
was_roaming(1,he,him).
give(1,his_way,him).
give(1,his_way,lodging_for_night).
give(1,his_way,lodging).
is_in(1,forest,morning).
root(2,ROOT,went).
mark(2,went,as).
nsubj(2,went,he).
advmod(2,went,along).
case(2,cell,to).
det(2,satyr,the).
nmod:poss(2,cell,satyr).
case(2,satyr,'s).
nmod:to(2,along,cell).
det(2,man,the).
nsubj(2,raised,man).
nsubj(2,kept,man).
ccomp(2,went,raised).
case(2,hands,both).
nmod:poss(2,hands,his).
nmod:both(2,raised,hands).
case(2,mouth,to).
nmod:poss(2,mouth,his).
nmod:to(2,raised,mouth).
cc(2,raised,and).
ccomp(2,went,kept).
conj:and(2,raised,kept).
mark(2,blowing,on).
advcl:on(2,kept,blowing).
case(2,them,at).
nmod:at(2,blowing,them).
kept(2,man,blowing_at_them).
kept(2,man,blowing).
raised(2,man,his_hands).
to(2,satyr,cell).
raised_both(2,man,his_hands).
root(3,ROOT,do).
nmod:for(3,do,what).
aux(3,do,do).
nsubj(3,do,you).
dobj(3,do,that).
case(3,what,for).
root(4,ROOT,said).
det(4,satyr,the).
nsubj(4,said,satyr).
root(5,ROOT,numb).
nmod:poss(5,hands,my).
nsubj(5,numb,hands).
cop(5,numb,are).
case(5,cold,with).
det(5,cold,the).
nmod:with(5,numb,cold).
are(5,my_hands,numb).
are_numb_with(5,my_hands,cold).
root(6,ROOT,said).
det(6,man,the).
nsubj(6,said,man).
root(7,ROOT,breath).
cc(7,breath,and).
nmod:poss(7,breath,my).
acl:relcl(7,breath,warms).
dobj(7,warms,them).
root(8,ROOT,arrived).
case(8,this,after).
nmod:after(8,arrived,this).
nsubj(8,arrived,they).
nsubj(8,put,they).
case(8,home,at).
det(8,satyr,the).
nmod:poss(8,home,satyr).
case(8,satyr,'s).
nmod:at(8,arrived,home).
cc(8,arrived,and).
advmod(8,put,soon).
det(8,satyr,the).
nmod:npmod(8,soon,satyr).
conj:and(8,arrived,put).
det(8,dish,a).
compound(8,dish,smoking).
dobj(8,put,dish).
case(8,porridge,of).
nmod:of(8,dish,porridge).
case(8,him,before).
nmod:before(8,put,him).
arrived_after(8,they,this).
put(8,they,smoking_dish_of_porridge).
soon_put_smoking_dish_before(8,they,him).
soon_put(8,they,smoking_dish_of_porridge).
put(8,they,smoking_dish).
at(8,satyr,home).
arrived_at(8,they,satyr_s_home).
put_smoking_dish_before(8,they,him).
soon_put(8,they,smoking_dish).
root(9,ROOT,raised).
cc(9,raised,but).
advmod(9,raised,when).
det(9,man,the).
nsubj(9,raised,man).
nmod:poss(9,spoon,his).
dobj(9,raised,spoon).
case(9,mouth,to).
nmod:poss(9,mouth,his).
nmod:to(9,raised,mouth).
nsubj(9,began,he).
acl:relcl(9,mouth,began).
xcomp(9,began,blowing).
case(9,it,upon).
nmod:upon(9,blowing,it).
blowing_upon(9,he,it).
began(9,he,blowing).
began(9,he,blowing_upon_it).
raised(9,man,his_spoon).
root(10,ROOT,what).
cc(10,what,and).
dobj(10,do,what).
acl:relcl(10,what,do).
nsubj(10,do,you).
ccomp(10,do,do).
ref(10,what,that).
nmod(10,do,for).
root(11,ROOT,said).
det(11,satyr,the).
nsubj(11,said,satyr).
root(12,ROOT,hot).
det(12,porridge,the).
nsubj(12,hot,porridge).
cop(12,hot,is).
advmod(12,hot,too).
cc(12,hot,and).
nmod:poss(12,breath,my).
nsubj(12,cool,breath).
aux(12,cool,will).
conj:and(12,hot,cool).
dobj(12,cool,it).
is(12,porridge,too_hot).
will_cool(12,my_breath,it).
is(12,porridge,hot).
root(13,ROOT,go).
mark(13,go,out).
nsubj(13,go,you).
root(14,ROOT,said).
det(14,satyr,the).
nsubj(14,said,satyr).
root(15,ROOT,have).
nsubj(15,have,i).
nsubj:xsubj(15,do,i).
aux(15,have,will).
advmod(15,do,nought).
mark(15,do,to).
xcomp(15,have,do).
case(15,man,with).
det(15,man,a).
nmod:with(15,do,man).
nsubj(15,blow,man).
ref(15,man,who).
aux(15,blow,can).
acl:relcl(15,man,blow).
xcomp(15,blow,hot).
cc(15,hot,and).
xcomp(15,blow,cold).
conj:and(15,hot,cold).
case(15,breath,with).
det(15,breath,the).
amod(15,breath,same).
nmod:with(15,blow,breath).
will_have(15,i,nought_do).
will_have(15,i,do).
