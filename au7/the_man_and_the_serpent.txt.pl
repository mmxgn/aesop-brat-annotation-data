root(0,ROOT,turned).
det(0,countryman,a).
nmod:poss(0,son,countryman).
case(0,countryman,'s).
nmod:upon(0,turned,son).
case(0,trod,by).
compound(0,trod,accident).
nmod:by(0,son,trod).
case(0,son,upon).
det(0,serpent,a).
nmod:poss(0,tail,serpent).
case(0,serpent,'s).
dep(0,son,tail).
nsubj(0,turned,which).
nsubj(0,bit,which).
cc(0,turned,and).
conj:and(0,turned,bit).
dobj(0,bit,him).
mark(0,died,so).
mwe(0,so,that).
nsubj(0,died,he).
advcl:so_that(0,bit,died).
upon(0,countryman,son_by_accident_trod).
has(0,serpent,tail).
root(1,ROOT,cut).
det(1,father,the).
nsubj(1,cut,father).
case(1,rage,in).
det(1,rage,a).
nmod:in(1,father,rage).
dep(1,rage,got).
nmod:poss(1,axe,his).
dobj(1,got,axe).
cc(1,got,and).
dep(1,rage,pursuing).
conj:and(1,got,pursuing).
det(1,serpent,the).
dobj(1,pursuing,serpent).
compound:prt(1,cut,off).
dobj(1,cut,part).
case(1,tail,of).
nmod:poss(1,tail,its).
nmod:of(1,part,tail).
cut_off(1,father,part).
cut_off(1,father,part_of_its_tail).
pursuing(1,his_axe,serpent).
is_in(1,father,rage).
root(2,ROOT,began).
mark(2,began,so).
det(2,serpent,the).
nsubj(2,began,serpent).
nsubj(2,caused,serpent).
case(2,revenge,in).
nmod:in(2,serpent,revenge).
xcomp(2,began,stinging).
det:qmod(2,cattle,several).
mwe(2,several,of).
det(2,farmer,the).
nmod:poss(2,cattle,farmer).
case(2,farmer,'s).
dobj(2,stinging,cattle).
cc(2,began,and).
conj:and(2,began,caused).
dep(2,loss,him).
amod(2,loss,severe).
dobj(2,caused,loss).
caused(2,serpent,loss).
caused(2,serpent,severe_loss).
has(2,farmer,cattle).
is_in(2,serpent,revenge).
root(3,ROOT,thought).
advmod(3,farmer,well).
det(3,farmer,the).
nsubj(3,thought,farmer).
nsubj(3,brought,farmer).
nsubj(3,make,it).
dep(3,make,best).
mark(3,make,to).
xcomp(3,thought,make).
dobj(3,make,it).
compound:prt(3,make,up).
case(3,serpent,with).
det(3,serpent,the).
nmod:with(3,make,serpent).
cc(3,thought,and).
conj:and(3,thought,brought).
dobj(3,brought,food).
cc(3,food,and).
dobj(3,brought,honey).
conj:and(3,food,honey).
case(3,mouth,to).
det(3,mouth,the).
nmod:to(3,brought,mouth).
case(3,lair,of).
nmod:poss(3,lair,its).
nmod:of(3,mouth,lair).
cc(3,brought,and).
conj:and(3,thought,said).
conj:and(3,brought,said).
case(3,it,to).
nmod:to(3,said,it).
said_to(3,honey,it).
brought_food_to(3,farmer,mouth).
brought(3,farmer,food).
brought_honey_to(3,farmer,mouth).
brought(3,farmer,honey).
brought_food_to(3,farmer,mouth_of_its_lair).
make_up(3,it,it).
brought_honey_to(3,farmer,mouth_of_its_lair).
root(4,ROOT,let).
nsubj(4,forget,'s).
nsubj(4,forgive,'s).
ccomp(4,let,forget).
cc(4,forget,and).
ccomp(4,let,forgive).
conj:and(4,forget,forgive).
root(5,ROOT,perhaps).
nsubj(5,right,you).
nsubj:xsubj(5,punish,you).
nsubj:xsubj(5,take,you).
cop(5,right,were).
ccomp(5,perhaps,right).
mark(5,punish,to).
xcomp(5,right,punish).
nmod:poss(5,son,my).
dobj(5,punish,son).
cc(5,punish,and).
xcomp(5,right,take).
conj:and(5,punish,take).
dobj(5,take,vengeance).
case(5,cattle,on).
nmod:poss(5,cattle,my).
nmod:on(5,take,cattle).
cc(5,right,but).
advmod(5,right,surely).
nsubj(5,right,i).
cop(5,right,was).
ccomp(5,perhaps,right).
conj:but(5,right,right).
mark(5,trying,in).
advcl:in(5,right,trying).
mark(5,revenge,to).
xcomp(5,trying,revenge).
dobj(5,revenge,him).
take_vengeance_on(5,my_son,my_cattle).
take(5,my_son,vengeance).
were(5,you,right).
punish(5,you,my_son).
root(6,ROOT,now).
mark(6,satisfied,that).
nsubj(6,satisfied,we).
cop(6,satisfied,are).
det(6,satisfied,both).
dep(6,now,satisfied).
advmod(6,friends,why).
aux(6,friends,should).
neg(6,friends,not).
dobj(6,friends,we).
cop(6,friends,be).
advcl(6,satisfied,friends).
advmod(6,friends,again).
root(7,ROOT,no).
dep(7,no,no).
root(8,ROOT,said).
det(8,serpent,the).
nsubj(8,said,serpent).
root(9,ROOT,take).
compound:prt(9,take,away).
nmod:poss(9,gifts,your).
dobj(9,take,gifts).
root(10,ROOT,forget).
nsubj(10,forget,you).
aux(10,forget,can).
neg(10,forget,never).
det(10,death,the).
dobj(10,forget,death).
case(10,son,of).
nmod:poss(10,son,your).
nmod:of(10,death,son).
cc(10,death,nor).
dobj(10,forget,i).
conj:nor(10,death,i).
det(10,loss,the).
dep(10,i,loss).
case(10,tail,of).
nmod:poss(10,tail,my).
nmod:of(10,forget,tail).
