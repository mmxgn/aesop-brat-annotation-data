root(0,ROOT,cries).
det(0,shepherd,a).
nsubj(0,cries,shepherd).
acl(0,shepherd,watching).
nmod:poss(0,ass,his).
dobj(0,watching,ass).
advcl(0,watching,feeding).
mark(0,alarmed,in).
det(0,meadow,a).
nsubjpass(0,alarmed,meadow).
auxpass(0,alarmed,was).
advcl:in(0,feeding,alarmed).
dobj(0,alarmed,all).
case(0,sudden,of).
det(0,sudden,a).
nmod:of(0,all,sudden).
case(0,the,by).
nmod:agent(0,alarmed,the).
case(0,enemy,of).
det(0,enemy,the).
nmod:of(0,cries,enemy).
watching(0,shepherd,his_ass).
cries_of(0,shepherd,enemy).
root(1,ROOT,appealed).
nsubj(1,appealed,he).
nsubj:xsubj(1,fly,he).
case(1,ass,to).
det(1,ass,the).
nmod:to(1,appealed,ass).
mark(1,fly,to).
xcomp(1,appealed,fly).
case(1,him,with).
nmod:with(1,fly,him).
mark(1,captured,lest).
nsubjpass(1,captured,they).
aux(1,captured,should).
advmod(1,captured,both).
auxpass(1,captured,be).
advcl:lest(1,fly,captured).
cc(1,replied,but).
det(1,animal,the).
nsubj(1,replied,animal).
advmod(1,replied,lazily).
ccomp(1,captured,replied).
should(1,they,should_both_captured).
appealed(1,he,fly).
fly(1,he,should_both_captured).
appealed_to(1,he,ass).
fly_with(1,he,him).
fly(1,he,should_captured).
should(1,they,should_captured).
appealed(1,he,fly_with_him).
root(2,ROOT,pray).
advmod(2,pray,why).
aux(2,pray,should).
compound(2,pray,i).
root(3,ROOT,do).
nsubj(3,think,you).
ccomp(3,do,think).
nsubj(3,place,it).
dep(3,place,likely).
det(3,conqueror,the).
nsubj(3,place,conqueror).
aux(3,place,will).
xcomp(3,think,place).
case(3,me,on).
nmod:on(3,place,me).
nummod(3,sets,two).
dobj(3,place,sets).
case(3,panniers,of).
nmod:of(3,sets,panniers).
place(3,it,two_sets).
place(3,conqueror,two_sets).
place(3,conqueror,two_sets_of_panniers).
place(3,it,two_sets_of_panniers).
root(4,ROOT,').
root(5,ROOT,no).
root(6,ROOT,rejoined).
det(6,shepherd,the).
nsubj(6,rejoined,shepherd).
root(7,ROOT,then).
root(8,ROOT,said).
det(8,ass,the).
nsubj(8,said,ass).
root(9,ROOT,carry).
advmod(9,long,as).
advmod(9,carry,long).
case(9,i,as).
nmod:as(9,long,i).
det(9,panniers,the).
dobj(9,carry,panniers).
dep(9,it,panniers).
ref(9,panniers,what).
dep(9,it,matters).
acl:relcl(9,panniers,it).
case(9,me,to).
nmod:to(9,carry,me).
dobj(9,serve,whom).
nsubj(9,serve,i).
dep(9,carry,serve).
root(10,ROOT,change).
punct(10,change,').
case(10,change,in).
det(10,change,a).
case(10,government,of).
nmod:of(10,change,government).
det(10,nothing,the).
amod(10,nothing,poor).
compound(10,nothing,change).
nsubj(10,change,nothing).
case(10,name,beyond).
det(10,name,the).
nmod:beyond(10,nothing,name).
case(10,master,of).
nmod:poss(10,master,their).
nmod:of(10,name,master).
