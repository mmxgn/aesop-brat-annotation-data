root(0,ROOT,made).
det(0,ass,an).
nsubj(0,made,ass).
acl(0,ass,belonging).
case(0,herb-seller,to).
det(0,herb-seller,an).
nmod:to(0,belonging,herb-seller).
nsubj(0,gave,herb-seller).
ref(0,herb-seller,who).
acl:relcl(0,herb-seller,gave).
iobj(0,gave,him).
advmod(0,little,too).
amod(0,food,little).
dobj(0,gave,food).
cc(0,food,and).
advmod(0,much,too).
amod(0,work,much).
dobj(0,gave,work).
conj:and(0,food,work).
det(0,petition,a).
dobj(0,made,petition).
case(0,jupiter,to).
nmod:to(0,made,jupiter).
mark(0,released,to).
auxpass(0,released,be).
advcl:to(0,made,released).
case(0,service,from).
nmod:poss(0,service,his).
amod(0,service,present).
nmod:from(0,released,service).
cc(0,released,and).
advcl:to(0,made,provided).
conj:and(0,released,provided).
case(0,master,with).
det(0,master,another).
nmod:with(0,provided,master).
made_petition_to(0,ass,jupiter).
be_released_from(0,ass,his_service).
made_petition(0,ass,released).
be(0,ass,released).
be_released_from(0,ass,his_present_service).
made_petition(0,ass,released_from_his_service).
made_petition(0,ass,released_from_his_present_service).
made(0,ass,petition).
root(1,ROOT,caused).
nsubj(1,caused,jupiter).
mark(1,warning,after).
acl:after(1,jupiter,warning).
dobj(1,warning,him).
mark(1,repent,that).
nsubj(1,repent,he).
aux(1,repent,would).
ccomp(1,warning,repent).
nmod:poss(1,request,his).
dobj(1,repent,request).
dobj(1,caused,him).
nsubjpass:xsubj(1,sold,him).
mark(1,sold,to).
auxpass(1,sold,be).
xcomp(1,caused,sold).
case(1,tile-maker,to).
det(1,tile-maker,a).
nmod:to(1,sold,tile-maker).
be_sold_to(1,him,tile-maker).
be(1,him,sold).
repent(1,he,his_request).
root(2,ROOT,finding).
advmod(2,finding,shortly).
advmod(2,finding,afterwards).
mark(2,had,that).
nsubj(2,had,he).
ccomp(2,finding,had).
amod(2,loads,heavier).
dobj(2,had,loads).
mark(2,carry,to).
acl:to(2,loads,carry).
cc(2,loads,and).
amod(2,work,harder).
dobj(2,had,work).
conj:and(2,loads,work).
case(2,brick-field,in).
det(2,brick-field,the).
nmod:in(2,work,brick-field).
nsubj(2,petitioned,he).
acl:relcl(2,brick-field,petitioned).
case(2,change,for).
det(2,change,another).
nmod:for(2,petitioned,change).
case(2,master,of).
nmod:of(2,change,master).
is_in(2,harder_work,brick-field).
had(2,he,work).
loads(2,work,carry).
heavier_loads(2,work,carry).
had(2,he,harder_work).
had(2,he,loads_carry).
loads(2,harder_work,carry).
heavier_loads(2,harder_work,carry).
had(2,he,heavier_loads_carry).
root(3,ROOT,ordained).
nsubj(3,ordained,jupiter).
acl(3,jupiter,telling).
dobj(3,telling,him).
mark(3,time,that).
nsubj(3,time,it).
aux(3,time,would).
cop(3,time,be).
det(3,time,the).
amod(3,time,last).
ccomp(3,telling,time).
mark(3,grant,that).
nsubj(3,grant,he).
aux(3,grant,could).
ccomp(3,time,grant).
nmod:poss(3,request,his).
dobj(3,grant,request).
mark(3,sold,that).
nsubjpass(3,sold,he).
auxpass(3,sold,be).
ccomp(3,ordained,sold).
case(3,tanner,to).
det(3,tanner,a).
nmod:to(3,sold,tanner).
be_sold_to(3,he,tanner).
be(3,it,last_time).
grant(3,he,his_request).
be(3,he,sold).
be(3,it,time).
root(4,ROOT,found).
det(4,ass,the).
nsubj(4,found,ass).
mark(4,fallen,that).
nsubj(4,fallen,he).
aux(4,fallen,had).
ccomp(4,found,fallen).
case(4,hands,into).
amod(4,hands,worse).
nmod:into(4,fallen,hands).
cc(4,fallen,and).
csubj(4,said,noting).
nmod:poss(4,master,his).
nmod:poss(4,occupation,master).
case(4,master,'s).
dobj(4,noting,occupation).
ccomp(4,found,said).
conj:and(4,fallen,said).
xcomp(4,said,groaning).
has(4,master,occupation).
fallen_into(4,he,hands).
fallen_into(4,he,worse_hands).
root(5,ROOT,better).
nsubj(5,better,it).
aux(5,better,would).
aux(5,better,have).
cop(5,better,been).
mark(5,starved,for).
nsubjpass(5,starved,me).
nsubjpass(5,overworked,me).
mark(5,starved,to).
aux(5,starved,have).
auxpass(5,starved,been).
advmod(5,starved,either).
ccomp(5,better,starved).
case(5,one,by).
det(5,one,the).
nmod:agent(5,starved,one).
cc(5,starved,or).
mark(5,overworked,to).
aux(5,overworked,have).
auxpass(5,overworked,been).
ccomp(5,better,overworked).
conj:or(5,starved,overworked).
case(5,other,by).
det(5,other,the).
nmod:agent(5,overworked,other).
case(5,masters,of).
nmod:poss(5,masters,my).
amod(5,masters,former).
nmod:of(5,other,masters).
mark(5,bought,than).
mark(5,bought,to).
aux(5,bought,have).
auxpass(5,bought,been).
advcl:to(5,overworked,bought).
case(5,owner,by).
nmod:poss(5,owner,my).
amod(5,owner,present).
nmod:agent(5,bought,owner).
nsubj(5,will,owner).
ref(5,owner,who).
acl:relcl(5,owner,will).
advmod(5,tan,even).
mark(5,tan,after).
nsubj(5,tan,i).
cop(5,tan,am).
amod(5,tan,dead).
advcl:after(5,better,tan).
nsubj(5,hide,my).
nsubj(5,make,my).
acl:relcl(5,tan,hide).
cc(5,hide,and).
acl:relcl(5,tan,make).
conj:and(5,hide,make).
nsubj(5,useful,me).
xcomp(5,make,useful).
case(5,him,to).
nmod:to(5,useful,him).
am_dead_tan(5,i,my_hide).
even_am_dead_tan(5,i,my_hide).
even_am_tan(5,i,my_hide).
been_overworked_by(5,me,other).
would(5,it,would_have_better).
been(5,me,starved).
been(5,me,either_starved).
am_tan(5,i,my_hide).
make(5,my,me_useful).
been_starved_by(5,me,one).
been_overworked(5,me,have_bought).
been_overworked_by(5,me,other_of_my_former_masters).
been(5,me,overworked).
been_either_starved_by(5,me,one).
useful_to(5,me,him).
make(5,my,me_useful_to_him).
