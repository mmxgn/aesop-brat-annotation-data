root(0,ROOT,ass).
det(0,ass,an).
dep(0,ass,besought).
det(0,horse,a).
dobj(0,besought,horse).
mark(0,spare,to).
acl:to(0,horse,spare).
nsubj(0,portion,him).
det(0,portion,a).
amod(0,portion,small).
xcomp(0,spare,portion).
case(0,feed,of).
nmod:poss(0,feed,his).
nmod:of(0,portion,feed).
horse(0,besought,spare).
small_portion_of(0,him,his_feed).
portion_of(0,him,his_feed).
root(1,ROOT,yes).
root(2,ROOT,said).
det(2,horse,the).
nsubj(2,said,horse).
root(3,ROOT,remains).
mark(3,remains,if).
nsubj(3,remains,any).
compound:prt(3,remains,out).
case(3,what,of).
nmod:of(3,eating,what).
nsubj(3,eating,i).
aux(3,eating,am).
advmod(3,eating,now).
advcl(3,remains,eating).
nsubj(3,give,i).
aux(3,give,will).
ccomp(3,eating,give).
iobj(3,give,it).
dobj(3,give,you).
case(3,sake,for).
det(3,sake,the).
nmod:for(3,give,sake).
case(3,dignity,of).
nmod:poss(3,dignity,my).
amod(3,dignity,own).
amod(3,dignity,superior).
nmod:of(3,sake,dignity).
cc(3,eating,and).
mark(3,come,if).
nsubj(3,come,you).
aux(3,come,will).
advcl(3,remains,come).
conj:and(3,eating,come).
advmod(3,reach,when).
nsubj(3,reach,i).
advcl(3,come,reach).
nmod:poss(3,own,my).
dobj(3,reach,own).
dep(3,reach,stall).
case(3,evening,in).
det(3,evening,the).
nmod:in(3,stall,evening).
nsubj(3,give,i).
aux(3,give,will).
acl:relcl(3,evening,give).
iobj(3,give,you).
det(3,sack,a).
amod(3,sack,little).
dobj(3,give,sack).
case(3,barley,full).
case(3,barley,of).
nmod:of(3,sack,barley).
little_sack_full(3,i,full_barley).
give(3,i,it).
will_give(3,i,little_sack_full_of_barley).
will_give(3,i,you).
sack_full(3,i,full_barley).
will_give(3,i,sack_full_of_barley).
give(3,i,you).
reach(3,i,my_own).
will_give(3,i,sack).
will_give(3,i,little_sack).
root(4,ROOT,replied).
det(4,ass,the).
nsubj(4,replied,ass).
root(5,ROOT,thank).
dobj(5,thank,you).
root(6,ROOT,think).
cc(6,think,but).
nsubj(6,think,i).
aux(6,think,ca).
neg(6,think,n't).
mark(6,matter,that).
nsubj(6,refuse,you).
nsubj(6,matter,you).
ref(6,you,who).
acl:relcl(6,you,refuse).
dobj(6,refuse,me).
det(6,little,a).
dep(6,me,little).
ccomp(6,think,matter).
advmod(6,matter,now).
root(7,ROOT,confer).
aux(7,confer,will).
case(7,and,by).
advmod(7,confer,and).
case(7,and,by).
case(7,me,on).
nmod:on(7,confer,me).
det(7,benefit,a).
amod(7,benefit,greater).
nsubj(7,confer,benefit).
will_confer_on(7,benefit,me).
will_confer_on(7,greater_benefit,me).
