root(0,ROOT,had).
advmod(0,mice,long).
case(0,long,ago).
det(0,mice,the).
nsubj(0,had,mice).
det(0,council,a).
amod(0,council,general).
dobj(0,had,council).
mark(0,consider,to).
acl:to(0,council,consider).
det(0,measures,what).
dobj(0,take,measures).
nsubj:xsubj(0,outwit,measures).
nsubj(0,take,they).
aux(0,take,could).
ccomp(0,consider,take).
mark(0,outwit,to).
xcomp(0,take,outwit).
nmod:poss(0,enemy,their).
amod(0,enemy,common).
nsubj(0,cat,enemy).
det(0,cat,the).
xcomp(0,outwit,cat).
had(0,mice,council_consider).
had(0,mice,general_council_consider).
root(1,ROOT,said).
nsubj(1,said,some).
nsubj(1,said,this).
cc(1,this,and).
conj:and(1,this,some).
nsubj(1,said,some).
ccomp(1,said,said).
advmod(1,said,that).
root(2,ROOT,but).
case(2,mouse,at).
amod(2,mouse,last).
det(2,mouse,a).
amod(2,mouse,young).
nmod:at(2,but,mouse).
acl:relcl(2,mouse,got).
advmod(2,got,up).
cc(2,got,and).
acl:relcl(2,mouse,said).
conj:and(2,got,said).
nsubj(2,had,he).
ccomp(2,said,had).
det(2,proposal,a).
dobj(2,had,proposal).
mark(2,make,to).
acl:to(2,proposal,make).
dobj(2,thought,which).
nsubj(2,thought,he).
ccomp(2,make,thought).
aux(2,meet,would).
ccomp(2,thought,meet).
det(2,case,the).
dobj(2,meet,case).
root(3,ROOT,agree).
nsubj(3,agree,you).
aux(3,agree,will).
advmod(3,agree,all).
root(4,ROOT,said).
nsubj(4,said,he).
root(5,ROOT,consists).
mark(5,consists,that).
nmod:poss(5,danger,our).
compound(5,danger,chief).
nsubj(5,consists,danger).
case(5,manner,in).
det(5,manner,the).
amod(5,manner,sly).
cc(5,sly,and).
conj:and(5,sly,treacherous).
amod(5,manner,treacherous).
nmod:in(5,consists,manner).
nmod:in(5,approaches,manner).
case(5,which,in).
ref(5,manner,which).
det(5,enemy,the).
nsubj(5,approaches,enemy).
acl:relcl(5,manner,approaches).
dobj(5,approaches,us).
approaches(5,enemy,us).
root(6,ROOT,now).
mark(6,receive,if).
nsubj(6,receive,we).
aux(6,receive,could).
dep(6,now,receive).
det(6,signal,some).
dobj(6,receive,signal).
case(6,approach,of).
nmod:poss(6,approach,her).
nmod:of(6,signal,approach).
nsubj(6,escape,we).
aux(6,escape,could).
advmod(6,escape,easily).
acl:relcl(6,signal,escape).
case(6,her,from).
nmod:from(6,escape,her).
root(7,ROOT,venture).
dep(7,venture,i).
advmod(7,venture,therefore).
mark(7,propose,to).
advcl:to(7,venture,propose).
mark(7,procured,that).
det(7,bell,a).
amod(7,bell,small).
nsubjpass(7,procured,bell).
nsubjpass(7,attached,bell).
auxpass(7,procured,be).
ccomp(7,propose,procured).
cc(7,procured,and).
ccomp(7,propose,attached).
conj:and(7,procured,attached).
case(7,round,by).
det(7,round,a).
compound(7,round,ribbon).
nmod:agent(7,procured,round).
det(7,neck,the).
nsubj(7,venture,neck).
case(7,cat,of).
det(7,cat,the).
nmod:of(7,neck,cat).
venture_therefore(7,neck,propose).
be_procured_by(7,small_bell,ribbon_round).
be(7,small_bell,procured).
venture(7,neck,propose).
be(7,bell,procured).
be_procured_by(7,bell,ribbon_round).
root(8,ROOT,means).
mark(8,means,by).
nsubj(8,means,this).
nsubj(8,know,we).
aux(8,know,should).
advmod(8,know,always).
ccomp(8,means,know).
advmod(8,was,when).
nsubj(8,was,she).
nsubj(8,retire,she).
ccomp(8,know,was).
advmod(8,was,about).
cc(8,was,and).
aux(8,retire,could).
advmod(8,retire,easily).
ccomp(8,know,retire).
conj:and(8,was,retire).
mark(8,neighbourhood,while).
nsubj(8,neighbourhood,she).
cop(8,neighbourhood,was).
case(8,neighbourhood,in).
det(8,neighbourhood,the).
advcl:in(8,retire,neighbourhood).
easily_retire_in(8,she,neighbourhood).
retire_in(8,she,neighbourhood).
was_in(8,she,neighbourhood).
root(9,ROOT,met).
det(9,proposal,this).
nsubj(9,met,proposal).
case(9,applause,with).
amod(9,applause,general).
nmod:with(9,met,applause).
mark(9,got,until).
det(9,mouse,an).
amod(9,mouse,old).
nsubj(9,got,mouse).
nsubj(9,said,mouse).
advcl:until(9,met,got).
advmod(9,got,up).
cc(9,got,and).
advcl:until(9,met,said).
conj:and(9,got,said).
met(9,proposal,old_mouse_got).
met(9,proposal,old_mouse_got_up).
met(9,proposal,mouse_got).
met_with(9,proposal,applause).
met_with(9,proposal,general_applause).
met(9,proposal,mouse_got_up).
root(10,ROOT,all).
nsubj(10,all,that).
cop(10,all,is).
advmod(10,well,very).
advmod(10,all,well).
cc(10,bell,but).
nsubj(10,bell,who).
cop(10,bell,is).
case(10,bell,to).
dep(10,well,bell).
det(10,cat,the).
dep(10,bell,cat).
root(11,ROOT,looked).
det(11,mice,the).
nsubj(11,looked,mice).
case(11,one,at).
nmod:at(11,looked,one).
nsubj(11,spoke,another).
cc(11,another,and).
conj:and(11,another,nobody).
nsubj(11,spoke,nobody).
ccomp(11,looked,spoke).
looked_at(11,mice,one).
