root(0,ROOT,came).
det(0,thief,a).
nsubj(0,came,thief).
nsubj:xsubj(0,break,thief).
case(0,night,in).
det(0,night,the).
nmod:in(0,came,night).
mark(0,break,to).
xcomp(0,came,break).
case(0,house,into).
det(0,house,a).
nmod:into(0,break,house).
came_in(0,thief,night).
break_into(0,thief,house).
came(0,thief,break).
came(0,thief,break_into_house).
root(1,ROOT,brought).
nsubj(1,brought,he).
case(1,him,with).
nmod:with(1,brought,him).
amod(1,slices,several).
dobj(1,brought,slices).
case(1,meat,of).
nmod:of(1,slices,meat).
acl(1,meat,in).
mwe(1,in,order).
mark(1,pacify,to).
acl:to(1,slices,pacify).
det(1,housedog,the).
dobj(1,pacify,housedog).
mark(1,would,so).
mwe(1,so,that).
nsubj(1,would,he).
advcl:so_that(1,pacify,would).
neg(1,would,not).
compound(1,master,alarm).
nmod:poss(1,master,his).
xcomp(1,would,master).
case(1,barking,by).
nmod:by(1,master,barking).
root(2,ROOT,threw).
case(2,thief,as).
det(2,thief,the).
nmod:as(2,threw,thief).
dobj(2,threw,him).
det(2,pieces,the).
nsubj(2,threw,pieces).
case(2,meat,of).
nmod:of(2,pieces,meat).
det(2,dog,the).
nsubj(2,said,dog).
acl:relcl(2,meat,said).
threw(2,pieces,him).
root(3,ROOT,think).
mark(3,think,if).
nsubj(3,think,you).
nsubj:xsubj(3,stop,you).
mark(3,stop,to).
xcomp(3,think,stop).
nmod:poss(3,mouth,my).
dobj(3,stop,mouth).
nsubj(3,mistaken,you).
aux(3,mistaken,will).
cop(3,mistaken,be).
advmod(3,mistaken,greatly).
acl:relcl(3,mouth,mistaken).
will(3,you,will_greatly_mistaken).
will(3,you,will_mistaken).
root(4,ROOT,make).
det(4,kindness,this).
amod(4,kindness,sudden).
nsubj(4,make,kindness).
case(4,hands,at).
nmod:poss(4,hands,your).
nmod:at(4,kindness,hands).
aux(4,make,will).
advmod(4,make,only).
nsubj(4,watchful,me).
advmod(4,watchful,more).
xcomp(4,make,watchful).
mark(4,have,lest).
case(4,unexpected,under).
det(4,unexpected,these).
nmod:under(4,have,unexpected).
acl:relcl(4,unexpected,favors).
case(4,myself,to).
nmod:to(4,favors,myself).
nsubj(4,have,you).
ccomp(4,watchful,have).
det(4,ends,some).
amod(4,ends,private).
dobj(4,have,ends).
mark(4,accomplish,to).
acl:to(4,ends,accomplish).
acl:to(4,ends,accomplish).
conj:and(4,accomplish,accomplish).
case(4,benefit,for).
nmod:poss(4,benefit,your).
amod(4,benefit,own).
nmod:for(4,accomplish,benefit).
cc(4,accomplish,and).
case(4,injury,for).
nmod:poss(4,master,my).
nmod:poss(4,injury,master).
case(4,master,'s).
nmod:for(4,accomplish,injury).
for(4,master,injury).
have(4,you,private_ends_accomplish_for_my_master_s_injury).
have(4,you,private_ends_accomplish_for_your_benefit).
will_make(4,kindness,me_watchful).
will_make(4,sudden_kindness,me_watchful).
will_only_make(4,sudden_kindness,me_watchful).
have(4,you,ends_accomplish_for_your_benefit_for_my_master_s_injury).
have(4,you,ends_accomplish_for_your_own_benefit).
will_only_make(4,kindness,me_watchful).
have(4,you,private_ends_accomplish_for_your_benefit_for_my_master_s_injury).
have(4,you,private_ends_accomplish_for_your_own_benefit_for_my_master_s_injury).
have(4,you,private_ends_accomplish_for_your_own_benefit).
have(4,you,ends_accomplish_for_your_own_benefit_for_my_master_s_injury).
have(4,you,private_ends_accomplish).
have(4,you,ends_accomplish_for_my_master_s_injury).
have(4,you,ends_accomplish_for_your_benefit).
have(4,you,ends_accomplish).
