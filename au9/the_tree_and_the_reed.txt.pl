root(0,ROOT,well).
dep(0,well,little).
dep(0,little,one).
root(1,ROOT,said).
det(1,tree,a).
nsubj(1,said,tree).
case(1,reed,to).
det(1,reed,a).
nmod:to(1,tree,reed).
nsubj(1,growing,reed).
ref(1,reed,that).
aux(1,growing,was).
acl:relcl(1,reed,growing).
case(1,foot,at).
nmod:poss(1,foot,its).
nmod:at(1,growing,foot).
root(2,ROOT,plant).
advmod(2,plant,why).
aux(2,plant,do).
nsubj(2,plant,you).
nsubj(2,raise,you).
neg(2,plant,not).
nmod:poss(2,feet,your).
dobj(2,plant,feet).
advmod(2,plant,deeply).
case(2,ground,in).
det(2,ground,the).
nmod:in(2,deeply,ground).
cc(2,plant,and).
conj:and(2,plant,raise).
nmod:poss(2,head,your).
dobj(2,raise,head).
advmod(2,raise,boldly).
case(2,air,in).
det(2,air,the).
nmod:in(2,boldly,air).
mark(2,do,as).
nsubj(2,do,i).
advcl:as(2,raise,do).
raise(2,you,your_head).
raise_boldly(2,you,your_head).
root(3,ROOT,am).
advmod(3,am,i).
nsubj(3,am,contented).
case(3,lot,with).
nmod:poss(3,lot,my).
nmod:with(3,contented,lot).
root(4,ROOT,said).
det(4,reed,the).
nsubj(4,said,reed).
root(5,ROOT,grand).
nsubj(5,grand,i).
aux(5,grand,may).
neg(5,grand,not).
cop(5,grand,be).
advmod(5,grand,so).
cc(5,think,but).
nsubj(5,think,i).
ccomp(5,grand,think).
nsubj(5,safer,i).
cop(5,safer,am).
ccomp(5,think,safer).
root(6,ROOT,safe).
root(7,ROOT,sneered).
det(7,tree,the).
nsubj(7,sneered,tree).
root(8,ROOT,pluck).
nsubj(8,pluck,who).
nsubj(8,bow,who).
aux(8,pluck,shall).
dobj(8,pluck,me).
compound:prt(8,pluck,up).
case(8,roots,by).
det(8,roots,the).
nmod:by(8,pluck,roots).
cc(8,pluck,or).
conj:or(8,pluck,bow).
nmod:poss(8,head,my).
dobj(8,bow,head).
case(8,ground,to).
det(8,ground,the).
nmod:to(8,bow,ground).
root(9,ROOT,had).
cc(9,had,but).
nsubj(9,had,it).
nsubj:xsubj(9,repent,it).
advmod(9,had,soon).
mark(9,repent,to).
xcomp(9,had,repent).
case(9,its,of).
nmod:of(9,repent,its).
amod(9,its,boasting).
mark(9,arose,for).
det(9,hurricane,a).
nsubj(9,arose,hurricane).
advcl:for(9,repent,arose).
nsubj(9,tore,which).
nsubj(9,cast,which).
ccomp(9,arose,tore).
dobj(9,tore,it).
compound:prt(9,tore,up).
case(9,roots,from).
nmod:poss(9,roots,its).
nmod:from(9,tore,roots).
cc(9,tore,and).
ccomp(9,arose,cast).
conj:and(9,tore,cast).
nsubj(9,log,it).
det(9,log,a).
amod(9,log,useless).
xcomp(9,cast,log).
case(9,ground,on).
det(9,ground,the).
nmod:on(9,log,ground).
mark(9,stood,while).
det(9,reed,the).
amod(9,reed,little).
nsubj(9,stood,reed).
acl(9,reed,bending).
case(9,force,to).
det(9,force,the).
nmod:to(9,bending,force).
case(9,wind,of).
det(9,wind,the).
nmod:of(9,force,wind).
advmod(9,bending,soon).
advcl:while(9,had,stood).
xcomp(9,stood,upright).
advmod(9,stood,again).
advmod(9,passed,when).
det(9,storm,the).
nsubj(9,passed,storm).
aux(9,passed,had).
advcl(9,stood,passed).
compound:prt(9,passed,over).
useless_log_on(9,it,ground).
bending_soon_to(9,reed,force).
stood_again(9,little_reed,upright).
soon_had(9,it,repent).
had(9,it,repent_of_its).
stood_again(9,reed,upright).
had(9,it,repent_of_its_boasting).
repent_of(9,it,its_boasting).
bending_soon_to(9,reed,force_wind).
bending_to(9,reed,force).
bending_to(9,reed,force_wind).
soon_had(9,it,repent_of_its_boasting).
soon_had(9,it,repent_of_its).
bending_to(9,little_reed,force).
repent_of(9,it,its).
repent(9,it,hurricane_arose).
log_on(9,it,ground).
stood(9,little_reed,upright).
bending_soon_to(9,little_reed,force_wind).
had(9,it,repent).
bending_soon_to(9,little_reed,force).
bending_to(9,little_reed,force_wind).
stood(9,reed,upright).
