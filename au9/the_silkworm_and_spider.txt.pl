root(0,ROOT,received).
aux(0,received,having).
det(0,order,an).
nsubj(0,lioness,order).
case(0,yards,for).
nummod(0,yards,twenty).
nmod:for(0,order,yards).
case(0,silk,of).
nmod:of(0,yards,silk).
case(0,princess,from).
nmod:from(0,silk,princess).
ccomp(0,received,lioness).
det(0,silkworm,the).
nsubj(0,sat,silkworm).
nsubj(0,worked,silkworm).
ccomp(0,lioness,sat).
compound:prt(0,sat,down).
case(0,her,at).
nmod:at(0,sat,her).
ccomp(0,sat,loom).
cc(0,sat,and).
ccomp(0,lioness,worked).
conj:and(0,sat,worked).
compound:prt(0,worked,away).
case(0,zeal,with).
nmod:with(0,worked,zeal).
worked_away_with(0,silkworm,zeal).
sat_down_at(0,silkworm,her).
root(1,ROOT,came).
det(1,spider,a).
nsubj(1,came,spider).
nsubj(1,asked,spider).
nsubj:xsubj(1,hire,spider).
advmod(1,came,soon).
advmod(1,came,around).
cc(1,came,and).
conj:and(1,came,asked).
mark(1,hire,to).
xcomp(1,asked,hire).
det(1,web-room,a).
dobj(1,hire,web-room).
case(1,by,near).
dep(1,hire,by).
root(2,ROOT,acceded).
det(2,silkworm,the).
nsubj(2,acceded,silkworm).
cc(2,acceded,and).
det(2,spider,the).
nsubj(2,commenced,spider).
nsubj(2,worked,spider).
conj:and(2,acceded,commenced).
nmod:poss(2,task,her).
dobj(2,commenced,task).
cc(2,commenced,and).
conj:and(2,acceded,worked).
conj:and(2,commenced,worked).
advmod(2,rapidly,so).
advmod(2,worked,rapidly).
mark(2,finished,that).
case(2,time,in).
det(2,time,a).
amod(2,time,short).
nmod:in(2,finished,time).
det(2,web,the).
nsubjpass(2,finished,web).
auxpass(2,finished,was).
ccomp(2,worked,finished).
was_finished_in(2,web,time).
commenced(2,spider,her_task).
was(2,web,finished).
was_finished_in(2,web,short_time).
root(3,ROOT,look).
advmod(3,look,just).
case(3,it,at).
nmod:at(3,look,it).
root(4,ROOT,said).
nsubj(4,said,she).
root(5,ROOT,see).
cc(5,see,and).
advmod(5,is,how).
dep(5,how,grand).
cc(5,grand,and).
dep(5,how,delicate).
conj:and(5,grand,delicate).
nsubj(5,is,it).
ccomp(5,see,is).
root(6,ROOT,can).
nsubj(6,can,you).
nsubj(6,acknowledge,you).
neg(6,can,not).
cc(6,can,but).
conj:but(6,can,acknowledge).
mark(6,worker,that).
nsubj(6,worker,i).
cop(6,worker,'m).
det(6,worker,a).
advmod(6,better,much).
amod(6,worker,better).
ccomp(6,acknowledge,worker).
case(6,you,than).
nmod:than(6,worker,you).
m_much_better_worker_than(6,i,you).
m(6,i,better_worker).
m(6,i,worker).
m_better_worker_than(6,i,you).
m(6,i,better).
m_worker_than(6,i,you).
m(6,i,much_better_worker).
root(7,ROOT,see).
advmod(7,quickly,how).
advmod(7,perform,quickly).
nsubj(7,perform,i).
ccomp(7,see,perform).
nmod:poss(7,labors,my).
dobj(7,perform,labors).
quickly_perform(7,i,my_labors).
perform(7,i,my_labors).
how_quickly_perform(7,i,my_labors).
root(8,ROOT,yes).
root(9,ROOT,answered).
det(9,silkworm,the).
dobj(9,answered,silkworm).
root(10,ROOT,hush).
cc(10,hush,but).
compound:prt(10,hush,up).
mark(10,bother,for).
nsubj(10,bother,you).
advcl:for(10,hush,bother).
dobj(10,bother,me).
bother(10,you,me).
root(11,ROOT,designed).
nmod:poss(11,labors,your).
nsubjpass(11,designed,labors).
nsubjpass(11,destroyed,labors).
auxpass(11,designed,are).
advmod(11,designed,only).
case(11,traps,as).
compound(11,traps,base).
nmod:as(11,designed,traps).
cc(11,designed,and).
auxpass(11,destroyed,are).
conj:and(11,designed,destroyed).
advmod(11,seen,whenever).
nsubjpass(11,seen,they).
nsubjpass(11,brushed,they).
auxpass(11,seen,are).
advcl(11,destroyed,seen).
cc(11,seen,and).
advcl(11,destroyed,brushed).
conj:and(11,seen,brushed).
advmod(11,seen,away).
case(11,dirt,as).
amod(11,dirt,useless).
nmod:as(11,seen,dirt).
are_seen_away_as(11,they,dirt).
are(11,your_labors,designed).
are(11,they,whenever_seen_away).
are(11,they,whenever_seen_away_as_dirt).
are(11,your_labors,designed_only).
are(11,they,seen_away).
are_seen_away_as(11,they,useless_dirt).
are(11,they,seen).
are(11,they,whenever_seen_as_dirt).
are_designed_as(11,your_labors,base_traps).
are(11,they,whenever_seen_as_useless_dirt).
are(11,they,whenever_seen).
are(11,your_labors,destroyed).
are(11,they,whenever_seen_away_as_useless_dirt).
are_seen_as(11,they,dirt).
are_seen_as(11,they,useless_dirt).
are_designed_only_as(11,your_labors,base_traps).
root(12,ROOT,stored).
mark(12,stored,while).
nsubjpass(12,stored,mine).
auxpass(12,stored,are).
compound:prt(12,stored,away).
case(12,ornaments,as).
nmod:as(12,stored,ornaments).
case(12,royalty,of).
nmod:of(12,ornaments,royalty).
are_stored_away_as(12,mine,ornaments_of_royalty).
are_stored_away_as(12,mine,ornaments).
