root(0,ROOT,asked).
det(0,stag,a).
nsubj(0,asked,stag).
nsubj(0,said,stag).
det(0,sheep,a).
dobj(0,asked,sheep).
nsubj:xsubj(0,lend,sheep).
mark(0,lend,to).
xcomp(0,asked,lend).
iobj(0,lend,him).
det(0,measure,a).
dobj(0,lend,measure).
case(0,wheat,of).
nmod:of(0,measure,wheat).
cc(0,asked,and).
conj:and(0,asked,said).
mark(0,surety,that).
det(0,wolf,the).
nsubj(0,surety,wolf).
aux(0,surety,would).
cop(0,surety,be).
nmod:poss(0,surety,his).
ccomp(0,said,surety).
lend(0,sheep,measure_of_wheat).
asked(0,stag,sheep).
lend(0,sheep,measure).
lend(0,sheep,him).
root(1,ROOT,intended).
det(1,sheep,the).
nsubjpass(1,intended,sheep).
acl(1,sheep,fearing).
det(1,fraud,some).
dobj(1,fearing,fraud).
auxpass(1,intended,was).
dep(1,intended,excused).
nsubj(1,saying,herself).
dep(1,excused,saying).
was(1,sheep,intended).
root(2,ROOT,accustomed).
det(2,wolf,the).
nsubjpass(2,accustomed,wolf).
auxpass(2,accustomed,is).
mark(2,seize,to).
ccomp(2,accustomed,seize).
dobj(2,wants,what).
nsubj(2,wants,he).
ccomp(2,seize,wants).
cc(2,seize,and).
mark(2,run,to).
ccomp(2,accustomed,run).
conj:and(2,seize,run).
compound:prt(2,run,off).
is(2,wolf,accustomed).
root(3,ROOT,outstrip).
cc(3,outstrip,and).
nsubj(3,outstrip,you).
advmod(3,outstrip,too).
aux(3,outstrip,can).
advmod(3,outstrip,quickly).
dobj(3,outstrip,me).
case(3,flight,in).
nmod:poss(3,flight,your).
amod(3,flight,rapid).
nmod:in(3,outstrip,flight).
too_can_outstrip(3,you,me).
can_outstrip(3,you,me).
can_quickly_outstrip(3,you,me).
too_can_quickly_outstrip(3,you,me).
root(4,ROOT,shall).
advmod(4,shall,how).
advmod(4,shall,then).
nsubj(4,shall,i).
cop(4,able,be).
dep(4,shall,able).
mark(4,find,to).
xcomp(4,able,find).
dobj(4,find,you).
advmod(4,comes,when).
det(4,day,the).
nsubj(4,comes,day).
case(4,payment,of).
nmod:of(4,day,payment).
advcl(4,find,comes).
