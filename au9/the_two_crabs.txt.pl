root(0,ROOT,came).
nummod(0,day,one).
amod(0,day,fine).
nsubj(0,came,day).
nummod(0,crabs,two).
dep(0,day,crabs).
compound:prt(0,came,out).
case(0,home,from).
nmod:poss(0,home,their).
nmod:from(0,came,home).
mark(0,take,to).
acl:to(0,home,take).
nsubj(0,stroll,a).
ccomp(0,take,stroll).
case(0,sand,on).
det(0,sand,the).
nmod:on(0,stroll,sand).
came_out_from(0,one_fine_day,their_home_take).
came_out_from(0,fine_day,their_home_take).
root(1,ROOT,child).
root(2,ROOT,said).
det(2,mother,the).
nsubj(2,said,mother).
root(3,ROOT,walking).
nsubj(3,walking,you).
aux(3,walking,are).
advmod(3,ungracefully,very).
xcomp(3,walking,ungracefully).
are_walking(3,you,ungracefully).
are_walking(3,you,very_ungracefully).
root(4,ROOT,accustom).
nsubj(4,accustom,you).
aux(4,accustom,should).
dobj(4,accustom,yourself).
mark(4,walking,to).
advcl:to(4,accustom,walking).
dobj(4,walking,straight).
advmod(4,walking,forward).
mark(4,twisting,without).
advcl:without(4,walking,twisting).
case(4,side,from).
nmod:from(4,twisting,side).
case(4,side,to).
nmod:to(4,twisting,side).
should_accustom(4,you,yourself).
walking_forward(4,you,twisting_to_side).
walking_forward(4,you,straight).
walking(4,you,twisting_to_side).
walking(4,you,twisting_from_side).
walking(4,you,twisting_from_side_to_side).
walking_forward(4,you,twisting_from_side_to_side).
walking_forward(4,you,twisting).
walking(4,you,straight).
walking(4,you,twisting).
walking_forward(4,you,twisting_from_side).
root(5,ROOT,mother).
compound(5,mother,pray).
root(6,ROOT,said).
det(6,young,the).
dobj(6,said,young).
nsubj(6,said,one).
said(6,one,young).
root(7,ROOT,do).
cc(7,do,but).
conj:but(7,do,set).
det(7,example,the).
dobj(7,set,example).
nsubj(7,follow,yourself).
cc(7,yourself,and).
conj:and(7,yourself,i).
nsubj(7,follow,i).
aux(7,follow,will).
acl:relcl(7,example,follow).
dobj(7,follow,you).
will_follow(7,i,you).
will_follow(7,yourself,you).
