root(0,ROOT,crept).
det(0,fox,a).
advmod(0,hungry,very).
amod(0,fox,hungry).
nsubj(0,crept,fox).
nsubj(0,made,fox).
acl(0,fox,seeing).
det(0,bread,some).
dobj(0,seeing,bread).
cc(0,bread,and).
dobj(0,seeing,meat).
conj:and(0,bread,meat).
acl(0,bread,left).
case(0,shepherds,by).
nmod:by(0,left,shepherds).
case(0,hollow,in).
det(0,hollow,the).
nmod:in(0,shepherds,hollow).
case(0,oak,of).
det(0,oak,an).
nmod:of(0,hollow,oak).
case(0,hole,into).
det(0,hole,the).
nmod:into(0,crept,hole).
cc(0,crept,and).
conj:and(0,crept,made).
det(0,meal,a).
amod(0,meal,hearty).
dobj(0,made,meal).
crept_into(0,hungry_fox,hole).
left_by(0,bread_meat,shepherds_hollow).
made(0,hungry_fox,meal).
made(0,fox,hearty_meal).
is_in(0,shepherds,hollow_of_oak).
made(0,fox,meal).
made(0,hungry_fox,hearty_meal).
crept_into(0,fox,hole).
left_by(0,bread_meat,shepherds).
left_by(0,bread_meat,shepherds_hollow_oak).
root(1,ROOT,finished).
advmod(1,finished,when).
nsubj(1,finished,he).
nsubj(1,began,he).
nsubj:xsubj(1,groan,he).
nsubj(1,full,he).
cop(1,full,was).
advmod(1,full,so).
ccomp(1,finished,full).
mark(1,able,that).
nsubj(1,able,he).
nsubj:xsubj(1,get,he).
cop(1,able,was).
neg(1,able,not).
ccomp(1,full,able).
mark(1,get,to).
xcomp(1,able,get).
compound:prt(1,get,out).
cc(1,finished,and).
conj:and(1,finished,began).
mark(1,groan,to).
xcomp(1,began,groan).
cc(1,groan,and).
xcomp(1,began,lament).
conj:and(1,groan,lament).
nmod:poss(1,fate,his).
dobj(1,lament,fate).
began(1,he,groan).
root(2,ROOT,inquired).
det(2,passing,another).
compound(2,passing,fox).
nsubj(2,inquired,passing).
mark(2,heard,by).
acl:by(2,passing,heard).
nsubj(2,cries,his).
ccomp(2,heard,cries).
cc(2,heard,and).
acl:by(2,passing,coming).
conj:and(2,heard,coming).
compound:prt(2,coming,up).
det(2,cause,the).
dobj(2,inquired,cause).
case(2,his,of).
nmod:of(2,cause,his).
amod(2,his,complaining).
root(3,ROOT,learning).
mark(3,learning,on).
nsubj(3,happened,what).
aux(3,happened,had).
ccomp(3,learning,happened).
nsubj(3,said,he).
ccomp(3,happened,said).
case(3,him,to).
nmod:to(3,said,him).
said_to(3,he,him).
root(4,ROOT,have).
advmod(4,have,ah).
nsubj(4,have,you).
nsubj:xsubj(4,remain,you).
aux(4,have,will).
mark(4,remain,to).
xcomp(4,have,remain).
expl(4,friend,there).
nmod:poss(4,friend,my).
xcomp(4,remain,friend).
mark(4,become,until).
nsubj(4,become,you).
advcl:until(4,have,become).
advcl(4,become,such).
mark(4,were,as).
nsubj(4,were,you).
advcl:as(4,become,were).
advmod(4,crept,when).
nsubj(4,crept,you).
advcl(4,were,crept).
nmod(4,crept,in).
cc(4,have,and).
advmod(4,get,then).
nsubj(4,get,you).
aux(4,get,will).
advmod(4,get,easily).
conj:and(4,have,get).
compound:prt(4,get,out).
become(4,you,you_were).
ah_will_have(4,you,remain).
ah_will_have(4,you,you_become).
will_have(4,you,you_become).
will_have(4,you,remain).
remain(4,you,my_friend).
