root(0,ROOT,hearing).
det(0,hearing,a).
compound(0,hearing,cat).
mark(0,ailing,that).
det(0,birds,the).
nsubj(0,ailing,birds).
case(0,aviary,in).
det(0,aviary,a).
amod(0,aviary,certain).
nmod:in(0,birds,aviary).
cop(0,ailing,were).
dep(0,hearing,ailing).
dep(0,ailing,dressed).
dobj(0,dressed,himself).
compound:prt(0,dressed,up).
case(0,physician,as).
det(0,physician,a).
nmod:as(0,dressed,physician).
cc(0,dressed,and).
dep(0,ailing,taking).
conj:and(0,dressed,taking).
nmod:poss(0,cane,his).
dobj(0,taking,cane).
cc(0,ailing,and).
det(0,bag,a).
nsubj(0,went,bag).
nsubj:xsubj(0,call,bag).
case(0,instruments,of).
nmod:of(0,bag,instruments).
acl(0,instruments,becoming).
nmod:poss(0,profession,his).
xcomp(0,becoming,profession).
dep(0,hearing,went).
conj:and(0,ailing,went).
mark(0,call,to).
xcomp(0,went,call).
case(0,them,on).
nmod:on(0,call,them).
went(0,bag,call).
is_in(0,birds,certain_aviary).
taking(0,himself,his_cane).
call_on(0,bag,them).
went(0,bag,call_on_them).
root(1,ROOT,knocked).
nsubj(1,knocked,he).
nsubj(1,inquired,he).
case(1,door,at).
det(1,door,the).
nmod:at(1,knocked,door).
cc(1,knocked,and).
conj:and(1,knocked,inquired).
case(1,inmates,of).
det(1,inmates,the).
nmod:of(1,inquired,inmates).
advmod(1,did,how).
nsubj(1,did,they).
advmod(1,did,all).
ccomp(1,inquired,did).
xcomp(1,did,saying).
mark(1,happy,that).
mark(1,ill,if).
nsubj(1,ill,they).
cop(1,ill,were).
advcl:if(1,happy,ill).
nsubj(1,happy,he).
nsubj:xsubj(1,prescribe,he).
nsubj:xsubj(1,cure,he).
aux(1,happy,would).
cop(1,happy,be).
ccomp(1,saying,happy).
mark(1,prescribe,to).
xcomp(1,happy,prescribe).
case(1,them,for).
nmod:for(1,prescribe,them).
cc(1,prescribe,and).
xcomp(1,happy,cure).
conj:and(1,prescribe,cure).
dobj(1,cure,them).
all_did(1,they,saying).
knocked_at(1,he,door).
inquired_of(1,he,inmates).
did(1,they,saying).
root(2,ROOT,replied).
nsubj(2,replied,they).
root(3,ROOT,well).
nsubj(3,well,we).
nsubj(3,continue,we).
cop(3,well,are).
advmod(3,well,all).
advmod(3,well,very).
cc(3,well,and).
aux(3,continue,shall).
conj:and(3,well,continue).
advmod(3,good,so).
mark(3,good,if).
nsubj(3,good,you).
nsubj:xsubj(3,go,you).
nsubj:xsubj(3,leave,you).
aux(3,good,will).
advmod(3,good,only).
cop(3,good,be).
advcl:if(3,continue,good).
advmod(3,good,enough).
mark(3,go,to).
xcomp(3,good,go).
advmod(3,go,away).
cc(3,go,and).
xcomp(3,good,leave).
conj:and(3,go,leave).
dobj(3,leave,us).
mark(3,are,as).
nsubj(3,are,we).
advcl:as(3,leave,are).
continue(3,we,will_only_good_enough).
will(3,you,will_only_good_enough).
are(3,we,well).
will(3,you,so_will_good).
continue(3,we,so_will_only_good_enough).
are(3,we,all_well).
will(3,you,will_only_good).
continue(3,we,will_good_enough).
continue(3,we,will_only_good).
are(3,we,all_very_well).
will(3,you,so_will_only_good_enough).
will(3,you,will_good_enough).
continue(3,we,so_will_good).
will(3,you,so_will_only_good).
continue(3,we,so_will_only_good).
continue(3,we,so_will_good_enough).
continue(3,we,will_good).
are(3,we,very_well).
will(3,you,will_good).
will(3,you,so_will_good_enough).
