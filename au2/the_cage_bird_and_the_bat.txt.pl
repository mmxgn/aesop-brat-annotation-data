root(0,ROOT,confined).
det(0,bird,a).
compound(0,bird,singing).
nsubjpass(0,confined,bird).
auxpass(0,confined,was).
case(0,cage,in).
det(0,cage,a).
nmod:in(0,confined,cage).
nsubj(0,hung,cage).
nsubj(0,had,cage).
ref(0,cage,which).
acl:relcl(0,cage,hung).
case(0,window,outside).
det(0,window,a).
nmod:outside(0,hung,window).
cc(0,hung,and).
acl:relcl(0,cage,had).
conj:and(0,hung,had).
det(0,way,a).
dobj(0,had,way).
case(0,singing,of).
nmod:of(0,way,singing).
case(0,night,at).
nmod:at(0,singing,night).
advmod(0,asleep,when).
det(0,birds,all).
amod(0,birds,other).
nsubj(0,asleep,birds).
cop(0,asleep,were).
advcl(0,had,asleep).
was(0,singing_bird,confined).
root(1,ROOT,night).
nummod(1,night,one).
det(1,bat,a).
nsubj(1,came,bat).
nsubj(1,clung,bat).
nsubj(1,asked,bat).
acl:relcl(1,night,came).
cc(1,came,and).
acl:relcl(1,night,clung).
conj:and(1,came,clung).
case(1,bars,to).
det(1,bars,the).
nmod:to(1,came,bars).
case(1,cage,of).
det(1,cage,the).
nmod:of(1,came,cage).
cc(1,came,and).
acl:relcl(1,night,asked).
conj:and(1,came,asked).
det(1,bird,the).
dep(1,night,bird).
advmod(1,silent,why).
nsubj(1,silent,she).
nsubj(1,sang,she).
cop(1,silent,was).
dep(1,bird,silent).
case(1,day,by).
nmod:by(1,silent,day).
cc(1,silent,and).
dep(1,bird,sang).
conj:and(1,silent,sang).
advmod(1,sang,only).
case(1,night,at).
nmod:at(1,sang,night).
came_to(1,bat,bars).
was(1,she,why_silent_by_day).
was(1,she,why_silent).
was(1,she,silent).
sang_only_at(1,she,night).
came_of(1,bat,cage).
sang_at(1,she,night).
was_silent_by(1,she,day).
root(2,ROOT,have).
nsubj(2,have,i).
det(2,reason,a).
advmod(2,good,very).
amod(2,reason,good).
dobj(2,have,reason).
mark(2,doing,for).
acl:for(2,reason,doing).
advmod(2,doing,so).
have(2,i,reason_doing).
have(2,i,good_reason_doing_so).
have(2,i,very_good_reason_doing).
have(2,i,good_reason_doing).
have(2,i,very_good_reason_doing_so).
have(2,i,reason_doing_so).
root(3,ROOT,said).
det(3,bird,the).
nsubj(3,said,bird).
root(4,ROOT,was).
nsubj(4,was,it).
nsubj(4,caught,it).
advmod(4,was,once).
advmod(4,singing,when).
nsubj(4,singing,i).
cop(4,singing,was).
advcl(4,once,singing).
case(4,daytime,in).
det(4,daytime,the).
nmod:in(4,singing,daytime).
mark(4,attracted,that).
det(4,fowler,a).
nsubjpass(4,attracted,fowler).
nsubjpass(4,set,fowler).
auxpass(4,attracted,was).
ccomp(4,singing,attracted).
case(4,voice,by).
nmod:poss(4,voice,my).
nmod:agent(4,attracted,voice).
cc(4,attracted,and).
ccomp(4,singing,set).
conj:and(4,attracted,set).
nmod:poss(4,nets,his).
dobj(4,set,nets).
case(4,me,for).
nmod:for(4,set,me).
cc(4,was,and).
conj:and(4,was,caught).
dobj(4,caught,me).
is_in(4,singing,daytime).
caught(4,it,me).
root(5,ROOT,sung).
mark(5,sung,since).
advmod(5,sung,then).
nsubj(5,sung,i).
aux(5,sung,have).
neg(5,sung,never).
case(5,night,except).
case(5,night,by).
nmod:by(5,sung,night).
root(6,ROOT,replied).
cc(6,replied,but).
det(6,bat,the).
nsubj(6,replied,bat).
root(7,ROOT,use).
nsubj(7,use,it).
cop(7,use,is).
neg(7,use,no).
nsubj(7,doing,your).
dep(7,use,doing).
mark(7,free,that).
advmod(7,prisoner,now).
advmod(7,prisoner,when).
nsubj(7,prisoner,you).
cop(7,prisoner,are).
det(7,prisoner,a).
advcl(7,free,prisoner).
mark(7,done,if).
advmod(7,done,only).
nsubj(7,done,you).
aux(7,done,had).
advcl:if(7,prisoner,done).
advmod(7,caught,so).
mark(7,caught,before).
nsubjpass(7,caught,you).
auxpass(7,caught,were).
advcl:before(7,done,caught).
nsubj(7,free,you).
aux(7,free,might).
advmod(7,free,still).
aux(7,free,have).
cop(7,free,been).
ccomp(7,doing,free).
