root(0,ROOT,asked).
det(0,camel-driver,an).
amod(0,camel-driver,arab).
nsubj(0,asked,camel-driver).
mark(0,completing,after).
acl:after(0,camel-driver,completing).
det(0,loading,the).
dobj(0,completing,loading).
case(0,camel,of).
nmod:poss(0,camel,his).
nmod:of(0,loading,camel).
dobj(0,asked,him).
dobj(0,like,which).
nsubj:xsubj(0,go,which).
nsubj(0,like,he).
aux(0,like,would).
dep(0,asked,like).
dobj(0,like,best).
nsubj:xsubj(0,go,best).
mark(0,go,to).
xcomp(0,like,go).
compound:prt(0,go,up).
dobj(0,go,hill).
cc(0,hill,or).
advmod(0,hill,down).
root(1,ROOT,replied).
det(1,beast,the).
amod(1,beast,poor).
nsubj(1,replied,beast).
neg(1,touch,not).
case(1,touch,without).
det(1,touch,a).
nmod:without(1,replied,touch).
case(1,reason,of).
nmod:of(1,touch,reason).
root(2,ROOT,ask).
advmod(2,ask,why).
aux(2,ask,do).
nsubj(2,ask,you).
dobj(2,ask,me).
do_ask(2,you,me).
root(3,ROOT,is).
nsubj(3,is,it).
mark(3,closed,that).
det(3,way,the).
compound(3,way,level).
nsubjpass(3,closed,way).
case(3,desert,through).
det(3,desert,the).
nmod:through(3,way,desert).
auxpass(3,closed,is).
dep(3,is,closed).
