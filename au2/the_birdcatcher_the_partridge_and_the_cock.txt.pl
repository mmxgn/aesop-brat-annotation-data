root(0,ROOT,about).
det(0,birdcatcher,a).
nsubj(0,about,birdcatcher).
nsubj:xsubj(0,sit,birdcatcher).
aux(0,about,was).
mark(0,sit,to).
xcomp(0,about,sit).
compound:prt(0,sit,down).
case(0,dinner,to).
det(0,dinner,a).
nmod:to(0,sit,dinner).
case(0,herbs,of).
nmod:of(0,dinner,herbs).
advmod(0,came,when).
det(0,friend,a).
nsubj(0,came,friend).
advmod(0,came,unexpectedly).
advcl(0,sit,came).
nmod(0,came,in).
sit_down_to(0,birdcatcher,dinner_of_herbs).
sit_down_to(0,birdcatcher,dinner).
root(1,ROOT,empty).
det(1,bird-trap,the).
nsubj(1,empty,bird-trap).
cop(1,empty,was).
advmod(1,empty,quite).
mark(1,caught,as).
nsubj(1,caught,he).
aux(1,caught,had).
advcl:as(1,empty,caught).
dobj(1,caught,nothing).
cc(1,caught,and).
nsubj(1,had,he).
nsubj:xsubj(1,kill,he).
advcl:as(1,empty,had).
conj:and(1,caught,had).
mark(1,kill,to).
xcomp(1,had,kill).
det(1,partridge,a).
amod(1,partridge,pied).
dobj(1,kill,partridge).
dobj(1,tamed,partridge).
ref(1,partridge,which).
nsubj(1,tamed,he).
aux(1,tamed,had).
acl:relcl(1,partridge,tamed).
case(1,decoy,for).
det(1,decoy,a).
nmod:for(1,tamed,decoy).
was(1,bird-trap,empty).
had_tamed_for(1,he,decoy).
had_caught(1,he,nothing).
was(1,bird-trap,quite_empty).
root(2,ROOT,entreated).
det(2,bird,the).
nsubj(2,entreated,bird).
advmod(2,entreated,earnestly).
case(2,life,for).
nmod:poss(2,life,his).
nmod:for(2,entreated,life).
entreated_earnestly_for(2,bird,his_life).
entreated_for(2,bird,his_life).
root(3,ROOT,do).
dobj(3,do,what).
aux(3,do,would).
nsubj(3,do,you).
case(3,me,without).
nmod:without(3,do,me).
advmod(3,next,when).
advmod(3,spread,next).
nsubj(3,spread,you).
advcl(3,do,spread).
nmod:poss(3,nets,your).
dobj(3,spread,nets).
spread(3,you,your_nets).
next_spread(3,you,your_nets).
when_next_spread(3,you,your_nets).
root(4,ROOT,chirp).
nsubj(4,chirp,who).
aux(4,chirp,would).
dobj(4,chirp,you).
nsubj:xsubj(4,sleep,you).
nsubj:xsubj(4,call,you).
mark(4,sleep,to).
xcomp(4,chirp,sleep).
cc(4,sleep,or).
xcomp(4,chirp,call).
conj:or(4,sleep,call).
case(4,you,for).
nmod:for(4,call,you).
det(4,covey,the).
dobj(4,call,covey).
mark(4,answering,of).
acl:of(4,covey,answering).
dobj(4,answering,birds).
root(5,ROOT,spared).
punct(5,spared,').
det(5,birdcatcher,the).
nsubj(5,spared,birdcatcher).
nsubj(5,determined,birdcatcher).
nsubj:xsubj(5,pick,birdcatcher).
nmod:poss(5,life,his).
dobj(5,spared,life).
cc(5,spared,and).
conj:and(5,spared,determined).
mark(5,pick,to).
xcomp(5,determined,pick).
compound:prt(5,pick,out).
det(5,cock,a).
amod(5,cock,fine).
amod(5,cock,young).
dobj(5,pick,cock).
advmod(5,attaining,just).
acl(5,cock,attaining).
case(5,his,to).
nmod:to(5,attaining,his).
dep(5,spared,comb).
spared(5,birdcatcher,his_life).
root(6,ROOT,expostulated).
cc(6,expostulated,but).
det(6,cock,the).
nsubj(6,expostulated,cock).
case(6,tones,in).
amod(6,tones,piteous).
nmod:in(6,expostulated,tones).
case(6,perch,from).
nmod:poss(6,perch,his).
nmod:from(6,expostulated,perch).
expostulated_in(6,cock,tones).
expostulated_from(6,cock,his_perch).
expostulated_in(6,cock,piteous_tones).
root(7,ROOT,kill).
mark(7,kill,if).
nsubj(7,kill,you).
dobj(7,kill,me).
nsubj(7,announce,me).
ref(7,me,who).
aux(7,announce,will).
acl:relcl(7,me,announce).
case(7,you,to).
nmod:to(7,announce,you).
det(7,appearance,the).
dobj(7,announce,appearance).
case(7,dawn,of).
det(7,dawn,the).
nmod:of(7,appearance,dawn).
root(8,ROOT,wake).
nsubj(8,wake,who).
nsubj(8,tell,who).
aux(8,wake,will).
dobj(8,wake,you).
case(8,tasks,to).
nmod:poss(8,tasks,your).
amod(8,tasks,daily).
nmod:to(8,wake,tasks).
cc(8,wake,or).
conj:or(8,wake,tell).
dobj(8,tell,you).
advmod(8,time,when).
nsubj(8,time,it).
cop(8,time,is).
ccomp(8,tell,time).
mark(8,visit,to).
acl:to(8,time,visit).
det(8,bird-trap,the).
dobj(8,visit,bird-trap).
case(8,morning,in).
det(8,morning,the).
nmod:in(8,bird-trap,morning).
visit(8,it,bird-trap).
is_in(8,bird-trap,morning).
visit(8,it,bird-trap_in_morning).
root(9,ROOT,replied).
punct(9,replied,').
nsubj(9,replied,he).
root(10,ROOT,say).
dobj(10,say,what).
nsubj(10,say,you).
cop(10,true,is).
ccomp(10,say,true).
root(11,ROOT,bird).
nsubj(11,bird,you).
cop(11,bird,are).
det(11,bird,a).
compound(11,bird,capital).
mark(11,telling,at).
acl:at(11,bird,telling).
det(11,time,the).
dobj(11,telling,time).
case(11,day,of).
nmod:of(11,time,day).
root(12,ROOT,have).
cc(12,friend,but).
nmod:poss(12,friend,my).
nsubj(12,have,friend).
cc(12,friend,and).
conj:and(12,friend,i).
nsubj(12,have,i).
aux(12,have,must).
nmod:poss(12,dinners,our).
dobj(12,have,dinners).
must_have(12,i,our_dinners).
must_have(12,my_friend,our_dinners).
