root(0,ROOT,found).
det(0,cock,a).
nsubj(0,found,cock).
nsubj(0,exclaimed,cock).
acl(0,cock,scratching).
case(0,food,for).
nmod:for(0,scratching,food).
case(0,himself,for).
nmod:for(0,food,himself).
cc(0,himself,and).
nmod:poss(0,hens,his).
nmod:for(0,food,hens).
conj:and(0,himself,hens).
det(0,stone,a).
amod(0,stone,precious).
dobj(0,found,stone).
cc(0,found,and).
conj:and(0,found,exclaimed).
scratching_for(0,cock,food_himself).
found(0,cock,precious_stone).
found(0,cock,stone).
scratching_for(0,cock,food).
root(1,ROOT,found).
mark(1,found,if).
nmod:poss(1,owner,your).
nsubj(1,found,owner).
aux(1,found,had).
dobj(1,found,thee).
cc(1,found,and).
neg(1,i,not).
nmod(1,taken,i).
nsubj(1,taken,he).
nsubj(1,set,he).
aux(1,taken,would).
aux(1,taken,have).
conj:and(1,found,taken).
xcomp(1,taken,thee).
advmod(1,thee,up).
cc(1,taken,and).
aux(1,set,have).
conj:and(1,found,set).
conj:and(1,taken,set).
dobj(1,set,thee).
case(1,estate,in).
nmod:poss(1,estate,thy).
amod(1,estate,first).
nmod:in(1,set,estate).
set(1,he,thee).
had_found(1,your_owner,thee).
root(2,ROOT,found).
cc(2,found,but).
nsubj(2,found,i).
aux(2,found,have).
dobj(2,found,thee).
case(2,purpose,for).
neg(2,purpose,no).
nmod:for(2,found,purpose).
root(3,ROOT,have).
nsubj(3,have,i).
aux(3,have,would).
advmod(3,have,rather).
nummod(3,barleycorn,one).
dobj(3,have,barleycorn).
case(3,jewels,than).
det:predet(3,jewels,all).
det(3,jewels,the).
nmod:than(3,barleycorn,jewels).
case(3,world,in).
det(3,world,the).
nmod:in(3,jewels,world).
would_have(3,i,one_barleycorn_than_jewels_in_world).
would_rather_have(3,i,one_barleycorn_than_jewels_in_world).
