root(0,ROOT,fell).
det(0,huntsman,a).
nsubj(0,fell,huntsman).
acl(0,huntsman,returning).
case(0,dogs,with).
nmod:poss(0,dogs,his).
nmod:with(0,returning,dogs).
case(0,field,from).
det(0,field,the).
nmod:from(0,returning,field).
case(0,chance,in).
case(0,chance,by).
nmod:by(0,fell,chance).
case(0,fisherman,with).
det(0,fisherman,a).
nmod:with(0,fell,fisherman).
nsubj(0,bringing,fisherman).
ref(0,fisherman,who).
aux(0,bringing,was).
acl:relcl(0,fisherman,bringing).
iobj(0,bringing,home).
det(0,basket,a).
dobj(0,bringing,basket).
advmod(0,laden,well).
amod(0,basket,laden).
case(0,fish,with).
nmod:with(0,bringing,fish).
returning_from(0,huntsman,field).
fell_in(0,huntsman,in_chance).
returning_with(0,huntsman,his_dogs).
root(1,ROOT,wished).
det(1,huntsman,the).
nsubj(1,wished,huntsman).
nsubj:xsubj(1,have,huntsman).
mark(1,have,to).
xcomp(1,wished,have).
det(1,fish,the).
nsubj(1,experienced,fish).
cc(1,fish,and).
nmod:poss(1,owner,their).
conj:and(1,fish,owner).
nsubj(1,experienced,owner).
ccomp(1,have,experienced).
det(1,longing,an).
amod(1,longing,equal).
dobj(1,experienced,longing).
case(1,contents,for).
det(1,contents,the).
nmod:for(1,experienced,contents).
case(1,game-bag,of).
det(1,game-bag,the).
nmod:of(1,contents,game-bag).
experienced(1,fish,equal_longing).
wished(1,huntsman,have).
experienced(1,fish,longing).
experienced_longing_for(1,their_owner,contents).
experienced_longing_for(1,fish,contents_of_game-bag).
experienced(1,their_owner,equal_longing).
experienced_longing_for(1,fish,contents).
experienced(1,their_owner,longing).
experienced_longing_for(1,their_owner,contents_of_game-bag).
root(2,ROOT,agreed).
nsubj(2,agreed,they).
nsubj:xsubj(2,exchange,they).
advmod(2,agreed,quickly).
mark(2,exchange,to).
xcomp(2,agreed,exchange).
det(2,produce,the).
dobj(2,exchange,produce).
case(2,sport,of).
nmod:poss(2,day,their).
nmod:poss(2,sport,day).
case(2,day,'s).
nmod:of(2,produce,sport).
of(2,day,sport).
exchange(2,they,produce).
exchange(2,they,produce_of_their_day_s_sport).
root(3,ROOT,pleased).
nsubj(3,pleased,each).
aux(3,pleased,was).
advmod(3,well,so).
advmod(3,pleased,well).
case(3,bargain,with).
nmod:poss(3,bargain,his).
nmod:with(3,pleased,bargain).
mark(3,made,that).
nsubj(3,made,they).
ccomp(3,pleased,made).
case(3,time,for).
det(3,time,some).
nmod:for(3,made,time).
det(3,day,the).
amod(3,day,same).
compound(3,day,exchange).
dep(3,time,day).
case(3,day,after).
nmod:after(3,made,day).
was_pleased_with(3,each,his_bargain).
was_well_pleased_with(3,each,his_bargain).
made_after(3,they,day).
made_for(3,they,time).
was_so_well_pleased_with(3,each,his_bargain).
root(4,ROOT,neighbor).
dep(4,neighbor,finally).
det(4,neighbor,a).
ccomp(4,neighbor,said).
case(4,them,to).
nmod:to(4,said,them).
root(5,ROOT,go).
mark(5,go,if).
nsubj(5,go,you).
mark(5,destroy,on).
case(5,way,in).
det(5,way,this).
nmod:in(5,destroy,way).
nsubj(5,destroy,you).
aux(5,destroy,will).
advmod(5,destroy,soon).
advcl:on(5,go,destroy).
case(5,use,by).
amod(5,use,frequent).
nmod:by(5,destroy,use).
det(5,pleasure,the).
dobj(5,destroy,pleasure).
case(5,exchange,of).
nmod:poss(5,exchange,your).
nmod:of(5,pleasure,exchange).
cc(5,destroy,and).
nsubj(5,wish,each).
nsubj:xsubj(5,retain,each).
aux(5,wish,will).
advmod(5,wish,again).
advcl:on(5,go,wish).
conj:and(5,destroy,wish).
mark(5,retain,to).
xcomp(5,wish,retain).
det(5,fruits,the).
dobj(5,retain,fruits).
case(5,sport,of).
nmod:poss(5,sport,his).
amod(5,sport,own).
nmod:of(5,fruits,sport).
will_destroy(5,you,pleasure).
will_destroy_pleasure_by(5,you,frequent_use).
retain(5,each,fruits_of_his_sport).
will_destroy(5,you,pleasure_of_your_exchange).
will_destroy_pleasure_in(5,you,way).
will_soon_destroy_pleasure_in(5,you,way).
will_soon_destroy_pleasure_by(5,you,frequent_use).
will_soon_destroy(5,you,pleasure).
pleasure_of(5,you,your_exchange).
will_destroy_pleasure_by(5,you,use).
will_soon_destroy_pleasure_by(5,you,use).
retain(5,each,fruits).
retain(5,each,fruits_of_his_own_sport).
will_soon_destroy(5,you,pleasure_of_your_exchange).
root(6,ROOT,abstain).
cc(6,abstain,and).
conj:and(6,abstain,enjoy).
