root(0,ROOT,quarrel).
nsubj(0,quarrel,a).
aux(0,arisen,had).
ccomp(0,quarrel,arisen).
case(0,horse,between).
det(0,horse,the).
nmod:between(0,arisen,horse).
cc(0,horse,and).
det(0,stag,the).
nmod:between(0,arisen,stag).
conj:and(0,horse,stag).
mark(0,came,so).
det(0,horse,the).
nsubj(0,came,horse).
nsubj:xsubj(0,ask,horse).
advcl:so(0,arisen,came).
case(0,hunter,to).
det(0,hunter,a).
nmod:to(0,came,hunter).
mark(0,ask,to).
xcomp(0,came,ask).
nmod:poss(0,help,his).
dobj(0,ask,help).
mark(0,take,to).
acl:to(0,help,take).
dobj(0,take,revenge).
case(0,stag,on).
det(0,stag,the).
nmod:on(0,take,stag).
came_to(0,horse,hunter).
root(1,ROOT,agreed).
det(1,hunter,the).
nsubj(1,agreed,hunter).
nsubj(1,said,hunter).
cc(1,agreed,but).
conj:but(1,agreed,said).
root(2,ROOT,desire).
mark(2,desire,if).
nsubj(2,desire,you).
nsubj:xsubj(2,conquer,you).
mark(2,conquer,to).
xcomp(2,desire,conquer).
det(2,stag,the).
dobj(2,conquer,stag).
nsubj(2,permit,you).
aux(2,permit,must).
acl:relcl(2,stag,permit).
dobj(2,permit,me).
nsubj:xsubj(2,place,me).
mark(2,place,to).
xcomp(2,permit,place).
det(2,piece,this).
dobj(2,place,piece).
case(2,iron,of).
nmod:of(2,piece,iron).
case(2,jaws,between).
nmod:poss(2,jaws,your).
nmod:between(2,iron,jaws).
mark(2,guide,so).
mwe(2,so,that).
nsubj(2,guide,i).
nsubj(2,allow,i).
aux(2,guide,may).
advcl:so_that(2,place,guide).
dobj(2,guide,you).
case(2,reins,with).
det(2,reins,these).
nmod:with(2,guide,reins).
cc(2,guide,and).
advcl:so_that(2,place,allow).
conj:and(2,guide,allow).
det(2,saddle,this).
dobj(2,allow,saddle).
mark(2,placed,to).
auxpass(2,placed,be).
acl:to(2,saddle,placed).
case(2,back,upon).
nmod:poss(2,back,your).
nmod:upon(2,placed,back).
mark(2,keep,so).
mwe(2,so,that).
nsubj(2,keep,i).
aux(2,keep,may).
advcl:so_that(2,placed,keep).
xcomp(2,keep,steady).
case(2,you,upon).
nmod:upon(2,steady,you).
mark(2,follow,as).
nsubj(2,follow,we).
advcl:as(2,keep,follow).
case(2,enemy,after).
det(2,enemy,the).
nmod:after(2,follow,enemy).
must_permit(2,you,me).
may_keep(2,i,steady_upon_you).
may_guide(2,i,you).
saddle(2,allow,placed).
may_keep(2,i,we_follow_after_enemy).
follow_after(2,we,enemy).
may_keep(2,i,steady).
may_keep(2,i,we_follow).
place(2,me,piece).
saddle(2,allow,placed_upon_your_back).
root(3,ROOT,agreed).
det(3,horse,the).
nsubj(3,agreed,horse).
nsubj(3,saddled,horse).
case(3,conditions,to).
det(3,conditions,the).
nmod:to(3,agreed,conditions).
cc(3,agreed,and).
det(3,hunter,the).
nmod:npmod(3,soon,hunter).
advmod(3,saddled,soon).
conj:and(3,agreed,saddled).
cc(3,saddled,and).
conj:and(3,agreed,bridled).
conj:and(3,saddled,bridled).
dobj(3,saddled,him).
agreed_to(3,horse,conditions).
saddled(3,horse,him).
soon_saddled(3,horse,him).
root(4,ROOT,then).
case(4,aid,with).
det(4,aid,the).
nmod:with(4,then,aid).
case(4,hunter,of).
det(4,hunter,the).
nmod:of(4,aid,hunter).
det(4,horse,the).
nsubj(4,overcame,horse).
nsubj(4,said,horse).
advmod(4,overcame,soon).
acl:relcl(4,hunter,overcame).
det(4,stag,the).
dobj(4,overcame,stag).
cc(4,overcame,and).
acl:relcl(4,hunter,said).
conj:and(4,overcame,said).
case(4,hunter,to).
det(4,hunter,the).
nmod:to(4,said,hunter).
root(5,ROOT,get).
advmod(5,get,now).
advmod(5,get,off).
cc(5,get,and).
conj:and(5,get,remove).
det(5,things,those).
dobj(5,remove,things).
case(5,mouth,from).
nmod:poss(5,mouth,my).
dep(5,remove,mouth).
cc(5,mouth,and).
dep(5,remove,back).
conj:and(5,mouth,back).
root(6,ROOT,not).
dep(6,not,so).
amod(6,friend,fast).
nmod:npmod(6,so,friend).
root(7,ROOT,said).
det(7,hunter,the).
nsubj(7,said,hunter).
root(8,ROOT,got).
nsubj(8,got,i).
nsubj(8,spur,i).
aux(8,got,have).
advmod(8,got,now).
dobj(8,got,you).
case(8,bit,under).
nmod:under(8,got,bit).
cc(8,got,and).
conj:and(8,got,spur).
cc(8,spur,and).
conj:and(8,got,prefer).
conj:and(8,spur,prefer).
mark(8,keep,to).
xcomp(8,prefer,keep).
dobj(8,keep,you).
mark(8,present,as).
nsubj(8,present,you).
cop(8,present,are).
advmod(8,present,at).
advcl:as(8,keep,present).
have_now_got(8,i,you).
are(8,you,present).
have_got(8,i,you).
are(8,you,at_present).
root(9,ROOT,allow).
mark(9,allow,if).
nsubj(9,allow,you).
dobj(9,allow,men).
nsubj:xsubj(9,use,men).
mark(9,use,to).
xcomp(9,allow,use).
dobj(9,use,you).
case(9,purposes,for).
nmod:poss(9,purposes,your).
amod(9,purposes,own).
nmod:for(9,use,purposes).
nsubj(9,use,they).
aux(9,use,will).
acl:relcl(9,purposes,use).
dobj(9,use,you).
case(9,theirs,for).
nmod:for(9,use,theirs).
allow(9,you,men).
use(9,men,you).
will_use(9,they,you).
