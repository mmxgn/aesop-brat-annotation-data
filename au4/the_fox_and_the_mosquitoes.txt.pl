root(0,ROOT,got).
det(0,fox,a).
nsubj(0,got,fox).
nsubj(0,move,fox).
mark(0,crossing,after).
acl:after(0,fox,crossing).
det(0,river,a).
dobj(0,crossing,river).
nmod:poss(0,tail,its).
nsubj(0,entangled,tail).
xcomp(0,got,entangled).
case(0,bush,in).
det(0,bush,a).
nmod:in(0,entangled,bush).
cc(0,got,and).
aux(0,move,could).
neg(0,move,not).
conj:and(0,got,move).
entangled_in(0,its_tail,bush).
root(1,ROOT,mosquitoes).
det:qmod(1,mosquitoes,a).
mwe(1,a,number).
mwe(1,a,of).
acl(1,mosquitoes,seeing).
nmod:poss(1,plight,its).
dobj(1,seeing,plight).
dep(1,plight,settled).
case(1,it,upon).
nmod:upon(1,settled,it).
cc(1,settled,and).
dep(1,plight,enjoyed).
conj:and(1,settled,enjoyed).
det(1,meal,a).
amod(1,meal,good).
nsubj(1,undisturbed,meal).
xcomp(1,enjoyed,undisturbed).
case(1,tail,by).
nmod:poss(1,tail,its).
nmod:by(1,undisturbed,tail).
undisturbed_by(1,good_meal,its_tail).
undisturbed_by(1,meal,its_tail).
root(2,ROOT,took).
det(2,hedgehog,a).
nsubj(2,took,hedgehog).
nsubj(2,went,hedgehog).
acl(2,hedgehog,strolling).
nmod(2,strolling,by).
dobj(2,took,pity).
case(2,fox,upon).
det(2,fox,the).
nmod:upon(2,took,fox).
cc(2,took,and).
conj:and(2,took,went).
compound:prt(2,went,up).
case(2,him,to).
nmod:to(2,went,him).
took(2,hedgehog,pity).
took_pity_upon(2,hedgehog,fox).
went_up_to(2,hedgehog,him).
root(3,ROOT,neighbour).
nsubj(3,neighbour,you).
cop(3,neighbour,are).
case(3,neighbour,in).
det(3,neighbour,a).
amod(3,neighbour,bad).
compound(3,neighbour,way).
are(3,you,bad).
are_in(3,you,bad_way_neighbour).
are_in(3,you,way_neighbour).
root(4,ROOT,said).
det(4,hedgehog,the).
nsubj(4,said,hedgehog).
root(5,ROOT,shall).
nsubj(5,shall,i).
acl:relcl(5,i,relieve).
dobj(5,relieve,you).
mark(5,driving,by).
advcl:by(5,relieve,driving).
compound:prt(5,driving,off).
det(5,mosquitoes,those).
dobj(5,driving,mosquitoes).
nsubj(5,sucking,mosquitoes).
ref(5,mosquitoes,who).
aux(5,sucking,are).
acl:relcl(5,mosquitoes,sucking).
nmod:poss(5,blood,your).
dobj(5,sucking,blood).
root(6,ROOT,thank).
nsubj(6,master,you).
ccomp(6,thank,master).
dobj(6,master,hedgehog).
master(6,you,hedgehog).
root(7,ROOT,said).
det(7,fox,the).
nsubj(7,said,fox).
root(8,ROOT,would).
cc(8,would,but).
nsubj(8,would,i).
advmod(8,not,rather).
neg(8,would,not).
root(9,ROOT,that).
advmod(9,how,why).
advmod(9,that,how).
cop(9,that,is).
root(10,ROOT,asked).
det(10,hedgehog,the).
nsubj(10,asked,hedgehog).
root(11,ROOT,well).
nsubj(11,see,you).
ccomp(11,well,see).
root(12,ROOT,was).
det(12,answer,the).
nsubj(12,was,answer).
root(13,ROOT,had).
det(13,mosquitoes,these).
nsubj(13,had,mosquitoes).
aux(13,had,have).
nmod:poss(13,fill,their).
dobj(13,had,fill).
have_had(13,mosquitoes,their_fill).
root(14,ROOT,drive).
mark(14,drive,if).
nsubj(14,drive,you).
dobj(14,drive,these).
advmod(14,drive,away).
nsubj(14,come,others).
nsubj(14,bleed,others).
aux(14,come,will).
dep(14,drive,come).
case(14,appetite,with).
amod(14,appetite,fresh).
nmod:with(14,come,appetite).
cc(14,come,and).
dep(14,drive,bleed).
conj:and(14,come,bleed).
dobj(14,bleed,me).
case(14,death,to).
nmod:to(14,bleed,death).
bleed(14,others,me).
