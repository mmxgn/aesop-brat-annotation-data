root(0,ROOT,father).
dep(0,father,oh).
root(1,ROOT,said).
det(1,frog,a).
amod(1,frog,little).
nsubj(1,said,frog).
case(1,one,to).
det(1,one,the).
amod(1,one,big).
nmod:to(1,frog,one).
acl(1,one,sitting).
case(1,side,by).
det(1,side,the).
nmod:by(1,sitting,side).
case(1,pool,of).
det(1,pool,a).
nmod:of(1,side,pool).
root(2,ROOT,seen).
nsubj(2,seen,i).
aux(2,seen,have).
det:predet(2,monster,such).
det(2,monster,a).
amod(2,monster,terrible).
dobj(2,seen,monster).
root(3,ROOT,big).
nsubj(3,big,it).
cop(3,big,was).
advmod(3,big,as).
mark(3,had,as).
det(3,mountain,a).
nsubj(3,had,mountain).
case(3,horns,with).
nmod:with(3,mountain,horns).
case(3,head,on).
nmod:poss(3,head,its).
nmod:on(3,horns,head).
cc(3,horns,and).
det(3,tail,a).
amod(3,tail,long).
nmod:with(3,mountain,tail).
conj:and(3,horns,tail).
cc(3,tail,and).
conj:and(3,horns,it).
conj:and(3,tail,it).
advcl:as(3,big,had).
dobj(3,had,hoofs).
acl(3,hoofs,divided).
case(3,two,in).
nmod:in(3,divided,two).
mountain_with(3,hoofs,horns_on_its_head).
was(3,it,as_big).
was(3,it,big).
had(3,mountain,hoofs_divided).
had(3,mountain,hoofs).
is_with(3,mountain,horns_on_its_head).
mountain_with(3,hoofs,horns).
divided_in(3,hoofs,two).
had(3,mountain,hoofs_divided_in_two).
root(4,ROOT,child).
amod(4,child,tush).
dep(4,child,tush).
root(5,ROOT,said).
det(5,frog,the).
amod(5,frog,old).
nsubj(5,said,frog).
root(6,ROOT,ox).
nsubj(6,ox,that).
cop(6,ox,was).
advmod(6,farmer,only).
nmod:poss(6,ox,farmer).
amod(6,farmer,white).
case(6,ox,'s).
was_s(6,that,only_farmer_white_ox).
root(7,ROOT,big).
nsubj(7,big,it).
cop(7,big,is).
neg(7,big,n't).
advmod(7,big,so).
advmod(7,big,either).
root(8,ROOT,bit).
nsubj(8,bit,he).
aux(8,bit,may).
cop(8,bit,be).
det(8,bit,a).
amod(8,bit,little).
nsubj(8,make,taller).
case(8,i,than).
nmod:than(8,taller,i).
cc(8,i,but).
nmod:than(8,taller,i).
conj:but(8,i,i).
aux(8,make,could).
advmod(8,make,easily).
acl:relcl(8,bit,make).
dobj(8,make,myself).
advmod(8,make,quite).
case(8,broad,as).
advcl:as(8,quite,broad).
could_make(8,taller,myself).
could_easily_make_quite(8,taller,myself).
could_easily_make(8,taller,myself).
be(8,he,little).
could_make_quite(8,taller,myself).
root(9,ROOT,see).
advmod(9,see,just).
nsubj(9,see,you).
root(10,ROOT,so).
nsubj(10,blew,he).
nsubj(10,blew,he).
ccomp(10,so,blew).
dobj(10,blew,himself).
compound:prt(10,blew,out).
cc(10,blew,and).
ccomp(10,so,blew).
conj:and(10,blew,blew).
dobj(10,blew,himself).
compound:prt(10,blew,out).
cc(10,blew,and).
conj:and(10,blew,blew).
conj:and(10,blew,blew).
dobj(10,blew,himself).
compound:prt(10,blew,out).
blew_out(10,himself,himself).
blew_out(10,he,himself).
blew_out(10,he,himself).
root(11,ROOT,was).
nsubj(11,was,he).
advmod(11,big,as).
advmod(11,that,big).
case(11,that,as).
nmod:as(11,was,that).
was_as(11,he,as_big_that).
was_as(11,he,that).
was_as(11,he,big_that).
root(12,ROOT,asked).
nsubj(12,asked,he).
root(13,ROOT,oh).
advmod(13,bigger,much).
nmod:than(13,oh,bigger).
case(13,bigger,than).
dep(13,bigger,that).
root(14,ROOT,said).
det(14,frog,the).
amod(14,frog,young).
nsubj(14,said,frog).
root(15,ROOT,one).
dep(15,one,again).
det(15,one,the).
amod(15,one,old).
acl:relcl(15,one,blew).
dobj(15,blew,himself).
compound:prt(15,blew,out).
cc(15,blew,and).
acl:relcl(15,one,asked).
conj:and(15,blew,asked).
det(15,one,the).
amod(15,one,young).
dobj(15,asked,one).
mark(15,big,if).
det(15,ox,the).
nsubj(15,big,ox).
cop(15,big,was).
advmod(15,big,as).
advcl:if(15,asked,big).
case(15,that,as).
nmod:as(15,big,that).
was_big_as(15,ox,that).
was(15,ox,big).
asked(15,himself,young_one).
was_as_big_as(15,ox,that).
was(15,ox,as_big).
root(16,ROOT,father).
amod(16,father,bigger).
dep(16,father,bigger).
root(17,ROOT,was).
det(17,reply,the).
nsubj(17,was,reply).
root(18,ROOT,took).
mark(18,took,so).
det(18,frog,the).
nsubj(18,took,frog).
nsubj(18,swelled,frog).
det(18,breath,a).
amod(18,breath,deep).
dobj(18,took,breath).
cc(18,took,and).
aux(18,took,blew).
cc(18,took,and).
aux(18,took,blew).
cc(18,took,and).
aux(18,took,blew).
cc(18,took,and).
aux(18,took,swelled).
cc(18,took,and).
aux(18,took,swelled).
cc(18,took,and).
conj:and(18,took,swelled).
root(19,ROOT,then).
cc(19,then,and).
nsubj(19,said,he).
acl:relcl(19,then,said).
root(20,ROOT,sure).
nsubj(20,sure,i).
cop(20,sure,'m).
det(20,ox,the).
nsubj(20,big,ox).
cop(20,big,is).
neg(20,big,not).
advmod(20,big,as).
ccomp(20,sure,big).
mark(20,burst,as).
cc(20,burst,but).
case(20,moment,at).
det(20,moment,this).
nmod:at(20,burst,moment).
nsubj(20,burst,he).
advcl:as(20,big,burst).
