root(0,ROOT,caught).
det(0,fisherman,a).
nsubj(0,lived,fisherman).
nsubj(0,caught,fisherman).
ref(0,fisherman,who).
acl:relcl(0,fisherman,lived).
case(0,produce,on).
det(0,produce,the).
nmod:on(0,lived,produce).
case(0,nets,of).
nmod:poss(0,nets,his).
nmod:of(0,produce,nets).
nummod(0,day,one).
nmod:tmod(0,lived,day).
det(0,fish,a).
amod(0,fish,single).
amod(0,fish,small).
dobj(0,caught,fish).
case(0,result,as).
det(0,result,the).
nmod:as(0,caught,result).
case(0,labor,of).
nmod:poss(0,day,his).
nmod:poss(0,labor,day).
case(0,day,'s).
nmod:of(0,result,labor).
of(0,day,labor).
root(1,ROOT,entreated).
det(1,panting,the).
compound(1,panting,fish).
nsubj(1,entreated,panting).
advmod(1,entreated,convulsively).
advmod(1,entreated,thus).
case(1,life,for).
nmod:poss(1,life,his).
nmod:for(1,entreated,life).
entreated_for(1,fish_panting,his_life).
thus_entreated_for(1,fish_panting,his_life).
convulsively_entreated_for(1,fish_panting,his_life).
convulsively_thus_entreated_for(1,fish_panting,his_life).
root(2,ROOT,sir).
compound(2,sir,o).
det(2,good,what).
nsubj(2,can,good).
dep(2,sir,can).
dobj(2,can,i).
cop(2,you,be).
case(2,you,to).
dep(2,can,you).
cc(2,can,and).
advmod(2,little,how).
advmod(2,i,little).
cop(2,i,am).
dep(2,sir,i).
conj:and(2,can,i).
amod(2,i,worth).
root(3,ROOT,come).
nsubjpass(3,come,i).
auxpass(3,come,am).
neg(3,come,not).
advmod(3,come,yet).
case(3,size,to).
nmod:poss(3,size,my).
amod(3,size,full).
nmod:to(3,come,size).
root(4,ROOT,spare).
nsubj(4,spare,pray).
nmod:poss(4,life,my).
dobj(4,spare,life).
cc(4,life,and).
dobj(4,spare,put).
conj:and(4,life,put).
dobj(4,put,me).
advmod(4,put,back).
case(4,sea,into).
det(4,sea,the).
nmod:into(4,spare,sea).
spare(4,pray,my_life).
root(5,ROOT,become).
nsubj(5,become,i).
aux(5,become,shall).
advmod(5,become,soon).
det(5,fit,a).
amod(5,fit,large).
compound(5,fit,fish).
xcomp(5,become,fit).
case(5,tables,for).
det(5,tables,the).
nmod:for(5,become,tables).
case(5,rich,of).
det(5,rich,the).
nmod:of(5,tables,rich).
cc(5,become,and).
advmod(5,catch,then).
nsubj(5,catch,you).
nsubj(5,make,you).
aux(5,catch,can).
conj:and(5,become,catch).
dobj(5,catch,me).
advmod(5,catch,again).
cc(5,catch,and).
conj:and(5,become,make).
conj:and(5,catch,make).
det(5,profit,a).
amod(5,profit,handsome).
dobj(5,make,profit).
case(5,me,of).
nmod:of(5,profit,me).
shall_become(5,i,large_fish_fit).
shall_become_for(5,i,tables).
can_catch(5,you,me).
make(5,you,handsome_profit).
shall_soon_become(5,i,large_fish_fit).
make(5,you,profit_of_me).
shall_become(5,i,fish_fit).
shall_soon_become_for(5,i,tables_of_rich).
shall_become_for(5,i,tables_of_rich).
profit_of(5,make,me).
can_catch_again(5,you,me).
shall_soon_become_for(5,i,tables).
make(5,you,profit).
make(5,you,handsome_profit_of_me).
shall_soon_become(5,i,fish_fit).
handsome_profit_of(5,make,me).
root(6,ROOT,replied).
det(6,fisherman,the).
nsubj(6,replied,fisherman).
root(7,ROOT,fellow).
nsubj(7,fellow,i).
aux(7,fellow,should).
advmod(7,fellow,indeed).
cop(7,fellow,be).
det(7,fellow,a).
advmod(7,simple,very).
amod(7,fellow,simple).
mark(7,were,if).
case(7,chance,for).
det(7,chance,the).
nmod:for(7,were,chance).
case(7,profit,of).
det(7,profit,a).
dep(7,uncertain,greater).
amod(7,profit,uncertain).
nmod:of(7,chance,profit).
nsubj(7,were,i).
nsubj:xsubj(7,forego,i).
advcl:if(7,fellow,were).
mark(7,forego,to).
xcomp(7,were,forego).
nmod:poss(7,gain,my).
amod(7,gain,present).
amod(7,gain,certain).
dobj(7,forego,gain).
should(7,i,should_very_simple_fellow).
should(7,i,should_fellow).
be(7,i,simple).
should(7,i,should_simple_fellow).
were_for(7,i,chance_of_uncertain_profit).
should(7,i,should_indeed_very_simple_fellow).
should(7,i,should_indeed_simple_fellow).
forego(7,i,my_present_gain).
forego(7,i,my_gain).
forego(7,i,my_certain_gain).
were_for(7,i,chance).
forego(7,i,my_present_certain_gain).
should(7,i,should_indeed_fellow).
