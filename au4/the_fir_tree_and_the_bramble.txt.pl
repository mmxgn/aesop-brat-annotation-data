root(0,ROOT,said).
det(0,fir-tree,a).
nsubj(0,said,fir-tree).
advmod(0,said,boastingly).
case(0,bramble,to).
det(0,bramble,the).
nmod:to(0,said,bramble).
said_boastingly_to(0,fir-tree,bramble).
said_to(0,fir-tree,bramble).
root(1,ROOT,useful).
nsubj(1,useful,you).
cop(1,useful,are).
case(1,nothing,for).
nmod:for(1,useful,nothing).
case(1,all,at).
nmod:at(1,useful,all).
are(1,you,useful).
are(1,you,useful_for_nothing_at_all).
are_useful_at(1,you,all).
are_useful_for(1,you,nothing).
root(2,ROOT,used).
mark(2,used,while).
nsubjpass(2,used,i).
auxpass(2,used,am).
advmod(2,used,everywhere).
case(2,roofs,for).
nmod:for(2,used,roofs).
cc(2,roofs,and).
nmod:for(2,used,houses).
conj:and(2,roofs,houses).
am(2,i,used).
am_used_for(2,i,roofs).
am(2,i,everywhere_used).
am_everywhere_used_for(2,i,roofs).
root(3,ROOT,answered).
det(3,bramble,the).
nsubj(3,answered,bramble).
punct(3,answered,`).
dobj(3,answered,you).
amod(3,creature,poor).
nmod:tmod(3,answered,creature).
mark(3,call,if).
nsubj(3,call,you).
nsubj:xsubj(3,mind,you).
aux(3,call,would).
advmod(3,call,only).
advcl:if(3,answered,call).
mark(3,mind,to).
xcomp(3,call,mind).
det(3,axes,the).
dobj(3,mind,axes).
nsubj(3,about,axes).
nsubj:xsubj(3,hew,axes).
cc(3,axes,and).
dobj(3,mind,saws).
conj:and(3,axes,saws).
nsubj(3,about,saws).
nsubj:xsubj(3,hew,saws).
ref(3,axes,which).
aux(3,about,are).
acl:relcl(3,axes,about).
mark(3,hew,to).
xcomp(3,about,hew).
nsubj(3,have,you).
dep(3,have,down).
nsubj(3,have,you).
aux(3,have,would).
xcomp(3,hew,have).
dobj(3,have,reason).
mark(3,wish,to).
advcl:to(3,have,wish).
mark(3,grown,that).
nsubj(3,grown,you).
aux(3,grown,had).
ccomp(3,wish,grown).
compound:prt(3,grown,up).
det(3,bramble,a).
dobj(3,grown,bramble).
neg(3,fir-tree,not).
det(3,fir-tree,a).
nmod(3,grown,fir-tree).
answered(3,bramble,you).
