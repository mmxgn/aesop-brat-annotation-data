root(0,ROOT,happened).
nsubj(0,happened,it).
mark(0,caught,that).
det(0,fisher,a).
nsubj(0,caught,fisher).
case(0,fishing,after).
nmod:after(0,fisher,fishing).
det(0,day,all).
dep(0,fishing,day).
ccomp(0,happened,caught).
advmod(0,fish,only).
det(0,fish,a).
amod(0,fish,little).
dobj(0,caught,fish).
caught(0,fisher,fish).
caught(0,fisher,only_little_fish).
caught(0,fisher,only_fish).
caught(0,fisher,little_fish).
root(1,ROOT,pray).
xcomp(1,pray,let).
nsubj(1,go,me).
ccomp(1,let,go).
dobj(1,go,master).
go(1,me,master).
root(2,ROOT,said).
det(2,fish,the).
nsubj(2,said,fish).
root(3,ROOT,much).
dep(3,much,i).
advmod(3,much,am).
advmod(3,small,too).
amod(3,much,small).
case(3,eating,for).
nmod:poss(3,eating,your).
nmod:for(3,much,eating).
advmod(3,much,just).
nsubj(3,much,now).
am_much_small_for(3,now,your_eating).
much_for(3,now,your_eating).
am_much_small_just_for(3,now,your_eating).
much_small_for(3,now,your_eating).
much_small_just_for(3,now,your_eating).
am_much_too_small_just_for(3,now,your_eating).
am_much_for(3,now,your_eating).
am_much_too_small_for(3,now,your_eating).
much_just_for(3,now,your_eating).
am_much_just_for(3,now,your_eating).
much_too_small_just_for(3,now,your_eating).
much_too_small_for(3,now,your_eating).
root(4,ROOT,put).
mark(4,put,if).
nsubj(4,put,you).
dobj(4,put,me).
advmod(4,put,back).
case(4,river,into).
det(4,river,the).
nmod:into(4,back,river).
nsubj(4,grow,i).
aux(4,grow,shall).
advmod(4,grow,soon).
dep(4,put,grow).
advmod(4,make,then).
nsubj(4,make,you).
aux(4,make,can).
ccomp(4,grow,make).
det(4,meal,a).
amod(4,meal,fine).
dobj(4,make,meal).
case(4,me,off).
nmod:off(4,make,me).
put(4,you,me).
make_meal_off(4,you,me).
put_back(4,you,me).
make(4,you,fine_meal).
make(4,you,meal).
root(5,ROOT,nay).
compound(5,nay,nay).
nmod:poss(5,fish,my).
amod(5,fish,little).
dep(5,nay,fish).
root(6,ROOT,said).
det(6,fisher,the).
nsubj(6,said,fisher).
root(7,ROOT,have).
advmod(7,have,i).
dobj(7,have,you).
nsubj(7,have,now).
have(7,now,you).
i_have(7,now,you).
root(8,ROOT,catch).
nsubj(8,catch,i).
aux(8,catch,may).
neg(8,catch,not).
dobj(8,catch,you).
advmod(8,catch,hereafter).
root(9,ROOT,worth).
det(9,thing,a).
amod(9,thing,little).
nsubj(9,worth,thing).
case(9,hand,in).
nmod:in(9,thing,hand).
cop(9,worth,is).
dep(9,worth,more).
case(9,thing,than).
det(9,thing,a).
amod(9,thing,great).
nmod:than(9,worth,thing).
case(9,prospect,in).
nmod:in(9,thing,prospect).
is_worth_than(9,little_thing,thing).
is_worth_than(9,thing,thing).
is_worth_than(9,little_thing,thing_in_prospect).
is(9,little_thing,worth).
is_worth_than(9,thing,great_thing).
is_in(9,great_thing,prospect).
is_in(9,little_thing,hand).
is_worth_than(9,little_thing,great_thing_in_prospect).
is(9,thing,worth).
is_worth_than(9,little_thing,great_thing).
is_worth_than(9,thing,great_thing_in_prospect).
is_worth_than(9,thing,thing_in_prospect).
