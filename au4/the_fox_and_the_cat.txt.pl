root(0,ROOT,boasting).
det(0,fox,a).
nsubj(0,boasting,fox).
aux(0,boasting,was).
case(0,cat,to).
det(0,cat,a).
nmod:to(0,boasting,cat).
case(0,devices,of).
nmod:poss(0,devices,its).
amod(0,devices,clever).
nmod:of(0,cat,devices).
mark(0,escaping,for).
advcl:for(0,boasting,escaping).
nmod:poss(0,enemies,its).
dobj(0,escaping,enemies).
was_boasting_to(0,fox,cat_of_its_clever_devices).
was_boasting_to(0,fox,cat_of_its_devices).
was_boasting_to(0,fox,cat).
escaping(0,fox,its_enemies).
root(1,ROOT,have).
nsubj(1,have,i).
det(1,bag,a).
amod(1,bag,whole).
dobj(1,have,bag).
case(1,tricks,of).
nmod:of(1,bag,tricks).
have(1,i,bag_of_tricks).
have(1,i,whole_bag_of_tricks).
have(1,i,whole_bag).
have(1,i,bag).
root(2,ROOT,said).
nsubj(2,said,he).
root(3,ROOT,contains).
nsubj(3,contains,which).
det(3,ways,a).
nummod(3,ways,hundred).
dobj(3,contains,ways).
mark(3,escaping,of).
acl:of(3,ways,escaping).
nmod:poss(3,enemies,my).
dobj(3,escaping,enemies).
root(4,ROOT,have).
nsubj(4,have,i).
advmod(4,one,only).
dobj(4,have,one).
have(4,i,only_one).
root(5,ROOT,said).
det(5,cat,the).
nsubj(5,said,cat).
root(6,ROOT,manage).
cc(6,manage,but).
nsubj(6,manage,i).
aux(6,manage,can).
advmod(6,manage,generally).
case(6,that,with).
nmod:with(6,manage,that).
can_manage_with(6,i,that).
can_generally_manage_with(6,i,that).
root(7,ROOT,moment).
advmod(7,moment,just).
case(7,moment,at).
det(7,moment,that).
nsubj(7,heard,they).
acl:relcl(7,moment,heard).
det(7,cry,the).
dobj(7,heard,cry).
case(7,pack,of).
det(7,pack,a).
nmod:of(7,cry,pack).
case(7,hounds,of).
nmod:of(7,pack,hounds).
acl(7,hounds,coming).
case(7,them,towards).
nmod:towards(7,coming,them).
cc(7,heard,and).
det(7,cat,the).
nsubj(7,scampered,cat).
nsubj(7,hid,cat).
advmod(7,scampered,immediately).
acl:relcl(7,moment,scampered).
conj:and(7,heard,scampered).
compound:prt(7,scampered,up).
det(7,tree,a).
dobj(7,scampered,tree).
cc(7,scampered,and).
conj:and(7,heard,hid).
conj:and(7,scampered,hid).
dobj(7,hid,herself).
case(7,boughs,in).
det(7,boughs,the).
nmod:in(7,hid,boughs).
heard(7,they,cry_of_pack).
cry_of(7,they,pack_of_hounds).
heard(7,they,cry).
immediately_scampered_up(7,cat,tree).
scampered_up(7,cat,tree).
hid(7,cat,herself).
heard(7,they,cry_of_pack_of_hounds).
cry_of(7,they,pack_of_hounds_coming).
cry_of(7,they,pack).
heard(7,they,cry_of_pack_of_hounds_coming).
cry_of(7,they,pack_of_hounds_coming_towards_them).
heard(7,they,cry_of_pack_of_hounds_coming_towards_them).
root(8,ROOT,plan).
nsubj(8,plan,this).
cop(8,plan,is).
nmod:poss(8,plan,my).
is(8,this,my_plan).
root(9,ROOT,said).
det(9,cat,the).
nsubj(9,said,cat).
root(10,ROOT,going).
dep(10,going,what).
aux(10,going,are).
nsubj(10,going,you).
nsubj:xsubj(10,do,you).
mark(10,do,to).
xcomp(10,going,do).
are_going(10,you,do).
root(11,ROOT,thought).
det(11,fox,the).
nsubj(11,thought,fox).
advmod(11,thought,first).
case(11,way,of).
nummod(11,way,one).
nmod:of(11,thought,way).
advmod(11,another,then).
case(11,another,of).
nmod:of(11,way,another).
cc(11,thought,and).
mark(11,debating,while).
nsubj(11,debating,he).
aux(11,debating,was).
conj:and(11,thought,debating).
det(11,hounds,the).
nsubj(11,came,hounds).
xcomp(11,debating,came).
case(11,nearer,nearer).
cc(11,nearer,and).
nmod:nearer(11,came,nearer).
cc(11,came,and).
case(11,last,at).
nmod:at(11,caught,last).
det(11,fox,the).
nsubjpass(11,caught,fox).
nsubjpass(11,killed,fox).
case(11,confusion,in).
nmod:poss(11,confusion,his).
nmod:in(11,fox,confusion).
auxpass(11,caught,was).
xcomp(11,debating,caught).
conj:and(11,came,caught).
compound:prt(11,caught,up).
case(11,hounds,by).
det(11,hounds,the).
nmod:agent(11,caught,hounds).
cc(11,caught,and).
advmod(11,killed,soon).
conj:and(11,came,killed).
conj:and(11,caught,killed).
case(11,huntsmen,by).
det(11,huntsmen,the).
nmod:by(11,killed,huntsmen).
thought_first_of(11,fox,one_way).
killed_by(11,fox,huntsmen).
was_debating(11,he,hounds_came_nearer_nearer).
soon_killed_by(11,fox,huntsmen).
is_in(11,fox,his_confusion).
was_caught_up_by(11,fox,hounds).
came_nearer(11,hounds,nearer).
thought_of(11,fox,one_way_then_of_another).
thought_first_of(11,fox,one_way_then_of_another).
was_caught_up_at(11,fox,last).
thought_first_of(11,fox,one_way_of_another).
thought_of(11,fox,one_way).
thought_of(11,fox,one_way_of_another).
was_debating(11,he,hounds_came).
root(12,ROOT,miss).
nsubj(12,looking,puss).
nsubj(12,said,puss).
ref(12,puss,who).
aux(12,looking,had).
aux(12,looking,been).
acl:relcl(12,puss,looking).
nmod(12,looking,on).
ccomp(12,miss,said).
root(13,ROOT,way).
dep(13,way,better).
nummod(13,way,one).
amod(13,way,safe).
nmod:on(13,reckon,way).
case(13,hundred,than).
det(13,hundred,a).
nmod:than(13,way,hundred).
case(13,which,on).
ref(13,way,which).
nsubj(13,reckon,you).
aux(13,reckon,can).
neg(13,reckon,not).
acl:relcl(13,way,reckon).
