root(0,ROOT,curled).
det(0,dog,the).
nmod:poss(0,house,dog).
case(0,dog,'s).
nsubj(0,curled,house).
case(0,wintertime,in).
det(0,wintertime,the).
nmod:in(0,house,wintertime).
det(0,dog,a).
dep(0,wintertime,dog).
compound:prt(0,curled,up).
case(0,space,in).
case(0,space,as).
amod(0,space,small).
det(0,space,a).
nmod:as(0,curled,space).
case(0,possible,as).
advcl:as(0,curled,possible).
case(0,cold,on).
mwe(0,on,account).
mwe(0,on,of).
det(0,cold,the).
nmod:on_account_of(0,curled,cold).
acl(0,cold,determined).
mark(0,make,to).
xcomp(0,determined,make).
nsubj(0,house,himself).
det(0,house,a).
xcomp(0,make,house).
curled_up_on_account_of(0,dog_s_house,cold_determined).
has(0,dog,house_in_wintertime).
curled_up_on_account_of(0,dog_s_house,cold).
curled_up_as(0,dog_s_house,possible).
curled_up_in(0,dog_s_house,in_space).
is_in(0,dog_s_house,wintertime).
curled_up_in(0,dog_s_house,in_small_space).
root(1,ROOT,however).
advmod(1,returned,when).
det(1,summer,the).
nsubj(1,returned,summer).
dep(1,however,returned).
advmod(1,returned,again).
nsubj(1,lay,he).
nsubj(1,appeared,he).
nsubj:xsubj(1,size,he).
ccomp(1,returned,lay).
xcomp(1,lay,asleep).
ccomp(1,asleep,stretched).
case(1,length,at).
nmod:poss(1,length,his).
amod(1,length,full).
nmod:at(1,stretched,length).
cc(1,lay,and).
ccomp(1,returned,appeared).
conj:and(1,lay,appeared).
case(1,himself,to).
nmod:to(1,appeared,himself).
mark(1,size,to).
cop(1,size,be).
case(1,size,of).
det(1,size,a).
amod(1,size,great).
xcomp(1,appeared,size).
lay(1,he,asleep).
appeared(1,he,size).
appeared_to(1,he,himself).
appeared(1,he,great_size).
root(2,ROOT,considered).
advmod(2,considered,now).
nsubj(2,considered,he).
mark(2,be,that).
nsubj(2,be,it).
aux(2,be,would).
ccomp(2,considered,be).
cc:preconj(2,easy,neither).
det(2,easy,an).
dobj(2,be,easy).
nsubj:xsubj(2,make,easy).
cc(2,easy,nor).
det(2,work,a).
amod(2,work,necessary).
dobj(2,be,work).
conj:nor(2,easy,work).
nsubj:xsubj(2,make,work).
mark(2,make,to).
xcomp(2,be,make).
nsubj(2,house,himself).
det:predet(2,house,such).
det(2,house,a).
xcomp(2,make,house).
mark(2,accommodate,as).
aux(2,accommodate,would).
advcl:as(2,make,accommodate).
dobj(2,accommodate,him).
accommodate(2,work,him).
accommodate(2,necessary_work,him).
be(2,it,easy).
