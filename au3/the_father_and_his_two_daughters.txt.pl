root(0,ROOT,had).
det(0,man,a).
nsubj(0,had,man).
nummod(0,daughters,two).
dobj(0,had,daughters).
det(0,one,the).
nsubj(0,married,one).
acl:relcl(0,daughters,married).
case(0,gardener,to).
det(0,gardener,a).
nmod:to(0,married,gardener).
cc(0,gardener,and).
det(0,other,the).
nmod:to(0,married,other).
conj:and(0,gardener,other).
case(0,tile-maker,to).
det(0,tile-maker,a).
nmod:to(0,married,tile-maker).
married_to(0,one,tile-maker).
married_to(0,one,gardener).
root(1,ROOT,went).
case(1,time,after).
det(1,time,a).
nmod:after(1,went,time).
nsubj(1,went,he).
nsubj(1,inquired,he).
case(1,daughter,to).
det(1,daughter,the).
nmod:to(1,went,daughter).
nsubj(1,married,daughter).
ref(1,daughter,who).
aux(1,married,had).
acl:relcl(1,daughter,married).
det(1,gardener,the).
dobj(1,married,gardener).
cc(1,went,and).
conj:and(1,went,inquired).
advmod(1,was,how).
nsubj(1,was,she).
dep(1,inquired,was).
cc(1,was,and).
advmod(1,went,how).
det(1,things,all).
nsubj(1,went,things).
dep(1,inquired,went).
conj:and(1,was,went).
case(1,her,with).
nmod:with(1,went,her).
went_after(1,he,time).
went_with(1,things,her).
root(2,ROOT,said).
nsubj(2,said,she).
root(3,ROOT,prospering).
det(3,things,all).
nsubj(3,prospering,things).
aux(3,prospering,are).
case(3,me,with).
nmod:with(3,prospering,me).
cc(3,prospering,and).
nsubj(3,have,i).
conj:and(3,prospering,have).
advmod(3,wish,only).
nummod(3,wish,one).
dobj(3,have,wish).
mark(3,fall,that).
expl(3,fall,there).
aux(3,fall,may).
cop(3,fall,be).
det(3,fall,a).
amod(3,fall,heavy).
dep(3,wish,fall).
case(3,rain,of).
nmod:of(3,fall,rain).
acl(3,rain,in).
mwe(3,in,order).
mark(3,watered,that).
det(3,plants,the).
nsubjpass(3,watered,plants).
aux(3,watered,may).
auxpass(3,watered,be).
advmod(3,watered,well).
ccomp(3,have,watered).
have(3,i,only_one_wish).
are_prospering_with(3,things,me).
be(3,plants,well_watered).
have(3,i,one_wish).
be(3,plants,watered).
root(4,ROOT,long).
dep(4,long,not).
mark(4,went,after).
nsubj(4,went,he).
dep(4,long,went).
case(4,daughter,to).
det(4,daughter,the).
nmod:to(4,went,daughter).
nsubj(4,married,daughter).
nsubj(4,inquired,daughter).
ref(4,daughter,who).
aux(4,married,had).
acl:relcl(4,daughter,married).
det(4,tilemaker,the).
dobj(4,married,tilemaker).
cc(4,married,and).
advmod(4,inquired,likewise).
acl:relcl(4,daughter,inquired).
conj:and(4,married,inquired).
case(4,her,of).
nmod:of(4,inquired,her).
advmod(4,fared,how).
nsubj(4,fared,she).
ccomp(4,went,fared).
likewise_inquired_of(4,tilemaker,her).
inquired_of(4,tilemaker,her).
root(5,ROOT,replied).
nsubj(5,replied,she).
root(6,ROOT,want).
dep(6,want,i).
case(6,nothing,for).
nmod:for(6,want,nothing).
cc(6,want,and).
conj:and(6,want,have).
advmod(6,have,only).
nummod(6,wish,one).
nsubj(6,want,wish).
nsubj(6,have,wish).
mark(6,continue,that).
det(6,weather,the).
amod(6,weather,dry).
nsubj(6,continue,weather).
aux(6,continue,may).
dep(6,want,continue).
cc(6,continue,and).
det(6,sun,the).
nsubj(6,shine,sun).
dep(6,want,shine).
conj:and(6,continue,shine).
xcomp(6,shine,hot).
cc(6,hot,and).
xcomp(6,shine,bright).
conj:and(6,hot,bright).
mark(6,dried,so).
mwe(6,so,that).
det(6,bricks,the).
nsubjpass(6,dried,bricks).
aux(6,dried,might).
auxpass(6,dried,be).
advcl:so_that(6,shine,dried).
want_for(6,wish,nothing).
shine(6,sun,hot).
might(6,bricks,might_dried).
shine(6,sun,might_dried).
want_for(6,one_wish,nothing).
root(7,ROOT,said).
nsubj(7,said,he).
case(7,her,to).
nmod:to(7,said,her).
said_to(7,he,her).
root(8,ROOT,wishes).
mark(8,wishes,if).
nmod:poss(8,sister,your).
nsubj(8,wishes,sister).
case(8,rain,for).
nmod:for(8,wishes,rain).
cc(8,wishes,and).
nsubj(8,i,you).
case(8,weather,for).
amod(8,weather,dry).
nmod:for(8,you,weather).
case(8,which,with).
nmod:with(8,weather,which).
case(8,two,of).
det(8,two,the).
nmod:of(8,you,two).
cop(8,i,am).
conj:and(8,wishes,i).
mark(8,join,to).
acl:to(8,i,join).
nmod:poss(8,wishes,my).
dobj(8,join,wishes).
wishes_for(8,your_sister,rain).
is_with(8,dry_weather,which).
