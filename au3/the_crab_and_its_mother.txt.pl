root(0,ROOT,said).
det(0,crab,a).
nsubj(0,said,crab).
case(0,son,to).
nmod:poss(0,son,her).
nmod:to(0,said,son).
said_to(0,crab,her_son).
root(1,ROOT,walk).
advmod(1,walk,why).
aux(1,walk,do).
nsubj(1,walk,you).
advmod(1,child,so).
amod(1,child,one-sided).
nmod:poss(1,child,my).
dobj(1,walk,child).
do_walk(1,you,my_child).
do_walk(1,you,so_my_child).
do_walk(1,you,one-sided_my_child).
do_walk(1,you,so_one-sided_my_child).
root(2,ROOT,becoming).
nsubj(2,becoming,it).
nsubj:xsubj(2,go,it).
aux(2,becoming,is).
advmod(2,more,far).
advmod(2,becoming,more).
mark(2,go,to).
xcomp(2,becoming,go).
dobj(2,go,straight).
advmod(2,go,forward).
is_far_more_becoming(2,it,go_forward).
go_forward(2,it,straight).
is_more_becoming(2,it,go_forward).
go(2,it,straight).
is_far_more_becoming(2,it,go).
is_becoming(2,it,go_forward).
is_becoming(2,it,go).
is_more_becoming(2,it,go).
root(3,ROOT,replied).
det(3,crab,the).
amod(3,crab,young).
nsubj(3,replied,crab).
root(4,ROOT,true).
advmod(4,true,quite).
amod(4,true,dear).
dep(4,true,mother).
root(5,ROOT,show).
cc(5,show,and).
mark(5,show,if).
nsubj(5,show,you).
aux(5,show,will).
iobj(5,show,me).
det(5,way,the).
amod(5,way,straight).
dobj(5,show,way).
nsubj(5,promise,i).
nsubj:xsubj(5,walk,i).
aux(5,promise,will).
acl:relcl(5,way,promise).
mark(5,walk,to).
xcomp(5,promise,walk).
case(5,it,in).
nmod:in(5,walk,it).
will_show(5,you,me).
will_promise(5,i,walk).
will_promise(5,i,walk_in_it).
walk_in(5,i,it).
root(6,ROOT,tried).
det(6,mother,the).
nsubj(6,tried,mother).
nsubj(6,submitted,mother).
case(6,vain,in).
nmod:in(6,tried,vain).
cc(6,tried,and).
conj:and(6,tried,submitted).
case(6,remonstrance,without).
nmod:without(6,submitted,remonstrance).
case(6,reproof,to).
det(6,reproof,the).
nmod:to(6,submitted,reproof).
case(6,child,of).
nmod:poss(6,child,her).
nmod:of(6,reproof,child).
tried_in(6,mother,vain).
submitted_to(6,mother,reproof).
submitted_without(6,mother,remonstrance).
submitted_to(6,mother,reproof_of_her_child).
