root(0,ROOT,gorging).
det(0,wolf,a).
nsubj(0,gorging,wolf).
aux(0,gorging,had).
aux(0,gorging,been).
case(0,animal,on).
det(0,animal,an).
nmod:on(0,gorging,animal).
nsubj(0,killed,he).
aux(0,killed,had).
acl:relcl(0,animal,killed).
advmod(0,stuck,when).
advmod(0,stuck,suddenly).
det(0,bone,a).
amod(0,bone,small).
nsubj(0,stuck,bone).
case(0,meat,in).
det(0,meat,the).
nmod:in(0,bone,meat).
advcl(0,killed,stuck).
case(0,throat,in).
nmod:poss(0,throat,his).
nmod:in(0,stuck,throat).
cc(0,stuck,and).
nsubj(0,swallow,he).
aux(0,swallow,could).
neg(0,swallow,not).
advcl(0,killed,swallow).
conj:and(0,stuck,swallow).
dobj(0,swallow,it).
is_in(0,small_bone,meat).
root(1,ROOT,felt).
nsubj(1,felt,he).
nsubj(1,ran,he).
advmod(1,felt,soon).
amod(1,pain,terrible).
dobj(1,felt,pain).
case(1,throat,in).
nmod:poss(1,throat,his).
nmod:in(1,felt,throat).
cc(1,felt,and).
conj:and(1,felt,ran).
advmod(1,ran,up).
cc(1,up,and).
advmod(1,ran,down).
conj:and(1,up,down).
ccomp(1,ran,groaning).
cc(1,groaning,and).
ccomp(1,ran,groaning).
conj:and(1,groaning,groaning).
cc(1,groaning,and).
ccomp(1,ran,seeking).
conj:and(1,groaning,seeking).
case(1,something,for).
nmod:for(1,seeking,something).
mark(1,relieve,to).
xcomp(1,seeking,relieve).
det(1,pain,the).
dobj(1,relieve,pain).
soon_felt(1,he,terrible_pain).
felt(1,he,pain).
soon_felt_in(1,he,his_throat).
felt(1,he,terrible_pain).
soon_felt(1,he,pain).
felt_in(1,he,his_throat).
felt_pain_in(1,he,his_throat).
soon_felt_pain_in(1,he,his_throat).
root(2,ROOT,tried).
nsubj(2,tried,he).
nsubj:xsubj(2,induce,he).
mark(2,induce,to).
xcomp(2,tried,induce).
det(2,one,every).
dobj(2,induce,one).
nsubj(2,met,he).
nsubj:xsubj(2,remove,he).
acl:relcl(2,one,met).
mark(2,remove,to).
xcomp(2,met,remove).
det(2,bone,the).
dobj(2,remove,bone).
root(3,ROOT,give).
nsubj(3,give,i).
aux(3,give,would).
dobj(3,give,anything).
would_give(3,i,anything).
root(4,ROOT,said).
nsubj(4,said,he).
root(5,ROOT,take).
mark(5,take,if).
nsubj(5,take,you).
aux(5,take,would).
dobj(5,take,it).
compound:prt(5,take,out).
would_take_out(5,you,it).
root(6,ROOT,agreed).
case(6,last,at).
nmod:at(6,agreed,last).
det(6,crane,the).
nsubj(6,agreed,crane).
nsubj:xsubj(6,try,crane).
nsubj(6,told,crane).
mark(6,try,to).
xcomp(6,agreed,try).
cc(6,agreed,and).
conj:and(6,agreed,told).
det(6,wolf,the).
dobj(6,told,wolf).
nsubj:xsubj(6,lie,wolf).
nsubj:xsubj(6,open,wolf).
mark(6,lie,to).
xcomp(6,told,lie).
case(6,side,on).
nmod:poss(6,side,his).
nmod:on(6,lie,side).
cc(6,lie,and).
xcomp(6,told,open).
conj:and(6,lie,open).
nmod:poss(6,jaws,his).
dobj(6,open,jaws).
case(6,wide,as).
advcl:as(6,open,wide).
mark(6,could,as).
nsubj(6,could,he).
advcl:as(6,open,could).
agreed_at(6,crane,last).
told(6,crane,wolf).
agreed(6,crane,try).
lie_on(6,wolf,his_side).
root(7,ROOT,crane).
dep(7,crane,then).
det(7,crane,the).
ccomp(7,crane,put).
nmod:poss(7,neck,its).
amod(7,neck,long).
dobj(7,put,neck).
case(7,throat,down).
det(7,wolf,the).
nmod:poss(7,throat,wolf).
case(7,wolf,'s).
nmod:down(7,put,throat).
cc(7,put,and).
case(7,beak,with).
nmod:poss(7,beak,its).
nmod:with(7,loosened,beak).
ccomp(7,crane,loosened).
conj:and(7,put,loosened).
det(7,bone,the).
dobj(7,loosened,bone).
mark(7,got,till).
case(7,last,at).
nmod:at(7,got,last).
nsubj(7,got,it).
dep(7,bone,got).
dobj(7,got,it).
compound:prt(7,got,out).
loosened(7,its_neck,bone).
down(7,wolf,throat).
loosened_bone_with(7,its_neck,its_beak).
loosened(7,its_long_neck,bone).
loosened_bone_with(7,its_long_neck,its_beak).
root(8,ROOT,give).
aux(8,give,will).
nsubj(8,give,you).
advmod(8,give,kindly).
dobj(8,give,me).
det(8,reward,the).
dep(8,me,reward).
nsubj(8,promised,you).
acl:relcl(8,me,promised).
root(9,ROOT,said).
det(9,crane,the).
nsubj(9,said,crane).
root(10,ROOT,grinned).
det(10,wolf,the).
nsubj(10,grinned,wolf).
nsubj(10,showed,wolf).
nsubj(10,said,wolf).
cc(10,grinned,and).
conj:and(10,grinned,showed).
nmod:poss(10,teeth,his).
dobj(10,grinned,teeth).
cc(10,grinned,and).
conj:and(10,grinned,said).
grinned(10,wolf,his_teeth).
root(11,ROOT,content).
cop(11,content,be).
root(12,ROOT,put).
nsubj(12,put,you).
nsubj(12,taken,you).
aux(12,put,have).
nmod:poss(12,head,your).
dobj(12,put,head).
case(12,mouth,inside).
det(12,wolf,a).
nmod:poss(12,mouth,wolf).
case(12,wolf,'s).
nmod:inside(12,put,mouth).
cc(12,put,and).
conj:and(12,put,taken).
dobj(12,taken,it).
compound:prt(12,taken,out).
advmod(12,safety,again).
case(12,safety,in).
nmod:in(12,taken,safety).
inside(12,wolf,mouth).
taken_out(12,you,it).
have_put(12,you,your_head).
root(13,ROOT,ought).
mark(13,ought,that).
mark(13,reward,to).
cop(13,reward,be).
xcomp(13,ought,reward).
advmod(13,reward,enough).
case(13,you,for).
nmod:for(13,reward,you).
