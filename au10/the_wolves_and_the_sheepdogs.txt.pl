root(0,ROOT,addressed).
det(0,wolves,the).
nsubj(0,addressed,wolves).
advmod(0,addressed,thus).
det(0,sheepdogs,the).
dobj(0,addressed,sheepdogs).
addressed(0,wolves,sheepdogs).
thus_addressed(0,wolves,sheepdogs).
root(1,ROOT,mind).
advmod(1,mind,why).
aux(1,mind,should).
nsubj(1,us,you).
nsubj(1,mind,you).
nsubj(1,live,you).
ref(1,you,who).
cop(1,us,are).
case(1,us,like).
acl:relcl(1,you,us).
case(1,things,in).
advmod(1,many,so).
amod(1,things,many).
nmod:in(1,us,things).
neg(1,mind,not).
cop(1,mind,be).
advmod(1,mind,entirely).
case(1,mind,of).
nummod(1,mind,one).
case(1,us,with).
nmod:with(1,mind,us).
cc(1,mind,and).
conj:and(1,mind,live).
case(1,us,with).
nmod:with(1,live,us).
mark(1,should,as).
nsubj(1,should,brothers).
advcl:as(1,live,should).
is_with(1,should_one_mind,us).
root(2,ROOT,differ).
nsubj(2,differ,we).
case(2,you,from).
nmod:from(2,differ,you).
case(2,point,in).
nummod(2,point,one).
nmod:in(2,you,point).
advmod(2,differ,only).
differ_from(2,we,you_in_one_point).
differ_from(2,we,you).
differ_only_from(2,we,you).
differ_only_from(2,we,you_in_one_point).
root(3,ROOT,live).
nsubj(3,live,we).
case(3,freedom,in).
nmod:in(3,live,freedom).
cc(3,live,but).
nsubj(3,bow,you).
conj:but(3,live,bow).
compound:prt(3,bow,down).
nmod(3,bow,to).
cc(3,live,and).
nsubj(3,whips,slave).
nsubj(3,put,slave).
case(3,men,for).
nmod:for(3,slave,men).
nsubj(3,flog,men).
ref(3,men,who).
case(3,return,in).
nmod:in(3,who,return).
case(3,services,for).
nmod:poss(3,services,your).
nmod:for(3,return,services).
acl:relcl(3,men,flog).
dobj(3,flog,you).
nmod(3,flog,with).
conj:and(3,live,whips).
cc(3,whips,and).
conj:and(3,live,put).
conj:and(3,whips,put).
dobj(3,put,collars).
case(3,necks,on).
nmod:poss(3,necks,your).
nmod:on(3,put,necks).
put_collars_on(3,slave,your_necks).
put(3,slave,collars).
live_in(3,we,freedom).
root(4,ROOT,make).
nsubj(4,make,they).
nsubj(4,guard,you).
advmod(4,guard,also).
advcl(4,make,guard).
nmod:poss(4,sheep,their).
dobj(4,guard,sheep).
cc(4,guard,and).
mark(4,eat,while).
nsubj(4,eat,they).
advcl(4,make,eat).
conj:and(4,guard,eat).
det(4,mutton,the).
nsubj(4,throw,mutton).
ccomp(4,eat,throw).
advmod(4,bones,only).
det(4,bones,the).
dobj(4,throw,bones).
case(4,you,to).
nmod:to(4,bones,you).
only_bones_to(4,mutton,you).
throw(4,mutton,bones).
throw(4,mutton,only_bones).
throw(4,mutton,only_bones_to_you).
bones_to(4,mutton,you).
throw(4,mutton,bones_to_you).
also_guard(4,you,their_sheep).
guard(4,you,their_sheep).
root(5,ROOT,persuaded).
mark(5,persuaded,if).
nsubjpass(5,persuaded,you).
aux(5,persuaded,will).
auxpass(5,persuaded,be).
case(5,us,by).
nmod:agent(5,persuaded,us).
nsubj(5,give,you).
aux(5,give,will).
acl:relcl(5,us,give).
iobj(5,give,us).
det(5,sheep,the).
dobj(5,give,sheep).
cc(5,give,and).
nsubj(5,enjoy,we).
aux(5,enjoy,will).
acl:relcl(5,us,enjoy).
conj:and(5,give,enjoy).
dobj(5,enjoy,them).
case(5,common,in).
nmod:in(5,enjoy,common).
mark(5,surfeited,till).
nsubj(5,surfeited,we).
advmod(5,surfeited,all).
cop(5,surfeited,are).
advcl:till(5,enjoy,surfeited).
will_give(5,you,sheep).
will_enjoy(5,we,them).
are(5,we,all_surfeited).
will(5,you,will_persuaded).
are(5,we,surfeited).
will_give(5,you,us).
root(6,ROOT,listened).
det(6,dogs,the).
nsubj(6,listened,dogs).
nsubj(6,entering,dogs).
nsubj(6,torn,dogs).
advmod(6,listened,favorably).
case(6,proposals,to).
det(6,proposals,these).
nmod:to(6,listened,proposals).
cc(6,listened,and).
conj:and(6,listened,entering).
det(6,den,the).
dobj(6,entering,den).
case(6,wolves,of).
det(6,wolves,the).
nmod:of(6,den,wolves).
nsubjpass(6,set,they).
auxpass(6,set,were).
acl:relcl(6,wolves,set).
nmod(6,set,upon).
cc(6,listened,and).
conj:and(6,listened,torn).
case(6,pieces,to).
nmod:to(6,torn,pieces).
listened_to(6,dogs,proposals).
were(6,they,set_upon).
entering(6,dogs,den).
listened_favorably_to(6,dogs,proposals).
were(6,they,set).
torn_to(6,dogs,pieces).
